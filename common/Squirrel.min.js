/*@preserve Copyright (C) 2015 Crawford Currie http://c-dot.co.uk license MIT*/
var Squirrel={PATHSEP:String.fromCharCode(1),NEW_SETTINGS:"has new settings",IS_LOADED:"is loaded",IS_PENDING_SAVE:"needs to be saved",IS_CORRUPT:"is corrupt",IS_EMPTY:"is empty",USE_STEGANOGRAPHY:!1,Dialog:{},Tree:{}};!function($,S){"use strict";var SD=S.Dialog,ST=S.Tree;S.init_ui=function(){$("#authenticated_save").hide().click(function(){return S.save_hoards(),!1}),$("#authenticated_undo").hide().click(function(){return Tree.undo(function(mess){SD.squeak({title:"Undo",message:mess})}),!1}),$("#authenticated_extras").click(function(){SD.extras()}),$("#search").on("change",function(){$("#search_hits").text(TX.tx("Searching...")),S.search($(this).val())}),$("#authenticated_search").click(function(){SD.search()}),S.init_custom_ui(),$(document).on("init_application",S.init_application).on("check_alarms",S.check_alarms).on("update_save",S.update_save),Utils.sometime_is_now()},S.init_application=function(){S.client={store:null,hoard:null,status:S.IS_EMPTY},S.cloud={store:null,status:S.IS_EMPTY},S.init_cloud_store()},S.check_alarms=function(){S.client.hoard.check_alarms(function(path,expired,next){var $node=ST.get_node(path);$node.treenode("ring_alarm"),SD.squeak({severity:"warning",message:"<div class='ui-icon ui-icon-squirrel-rang'></div>"+TX.tx("Reminder on '$1' was due on $2",path.join("/"),expired.toLocaleDateString()),after_close:next})})},S.add_child_node=function($node,title,value){var sval,p=$node.treenode("get_path");"string"==typeof value&&(sval=value),p.push(title);var res=S.client.hoard.record_action({type:"N",path:p,data:sval},function(e){ST.action(e,function($newnode){DEBUG&&!$newnode,$newnode.treenode("open"),"string"!=typeof value&&"undefined"!=typeof value&&S.insert_data(p,value),$newnode.treenode("edit","key"),Utils.sometime("update_save")},!0)});null!==res&&SD.squeak(res.message)},S.get_updates_from_cloud=function(cloard,chain){DEBUG&&console.debug("Merging from cloud hoard"),S.client.hoard.merge_from_cloud(cloard,ST.action,function(conflicts){conflicts.length>0&&(SD.squeak({title:TX.warning(),severity:"warning",message:TX.tx("Conflicts were detected while merging actions from the Cloud. Please review these rejected actions before saving.")}),$.each(conflicts,function(i,c){var e=c.conflict;SD.squeak_more({severity:"warning",message:Hoard.stringify_action(e)+": "+c.message})})),S.cloud.status=S.IS_LOADED,chain()})},S.unsaved_changes=function(max_changes){var message=[];if($(".treenode.modified").each(function(){DEBUG&&!$(this).data("path")&&!$(this).hasClass("treenode-root");var path=$(this).data("path")||"node";message.push(TX.tx("$1 has changed",path.replace(S.PATHSEP,"/")))}),message.length>max_changes){var l=message.length;message=message.slice(0,max_changes),message.push(TX.tx("... and $1 more changes",l-5))}return S.cloud.status!==S.IS_LOADED&&message.unshift(TX.tx("The $1 hoard $2",S.cloud.store?S.cloud.store.options().identifier:TX.tx("Cloud"),TX.tx(S.cloud.status))),S.client.status!==S.IS_LOADED&&message.unshift(TX.tx("The $1 hoard $2",S.client.store.options().identifier,TX.tx(S.client.status))),0===message.length?null:message.join("\n")},S.insert_data=function(path,data){SD.squeak({title:"Loading"}),S.client.hoard.actions_from_hierarchy({data:data},function(act,next){act.path=path.slice().concat(act.path);var res=S.client.hoard.record_action(act,function(sact){ST.action(sact,next)});null!==res&&SD.squeak_more(res.message),next&&next()},function(){Utils.sometime("update_save"),SD.squeak_more(TX.tx("JSON has been loaded"))})},S.save_hoards=function(){SD.squeak({title:TX.tx("Saving")});var client_ok=!0,cloud_ok=!0,finished=function(){DEBUG&&console.debug("...save finished"),Utils.sometime("update_save"),client_ok&&cloud_ok?S.client.hoard.options.autosave?SD.close_dialog($("#squeak")):SD.squeak_more(TX.tx("Save complete")):(SD.squeak_more({severity:"error",message:TX.tx("Save encountered errors")}),S.client.hoard.options.autosave=!1)},write_client_store=function(){S.client.store.writes("S."+S.client.store.user(),JSON.stringify(S.client.hoard),function(){DEBUG&&console.debug("...client save OK"),$(".modified").removeClass("modified"),S.client.status=S.IS_LOADED,SD.squeak_more(TX.tx("Saved in $1",this.options().identifier)),finished()},function(e){DEBUG&&console.debug("...client save failed "+e),SD.squeak_more({severity:"error",message:TX.tx("Failed to save in $1: $2",this.options().identifier,e)}),client_ok=!1,finished()})},save_client=function(){return DEBUG&&console.debug("...save to client"),S.client.status===S.IS_LOADED&&0===$(".modified").length?void finished():(S.client.status=S.PENDING_SAVE,SD.squeak_more({severity:"while",message:TX.tx("Saving in $1",S.client.store.options().identifier)}),void Utils.soon(write_client_store))},write_cloud_store=function(cloard){S.cloud.store.writes(S.client.hoard.options.store_path,JSON.stringify(cloard),function(){DEBUG&&console.debug("...cloud save OK"),S.client.hoard.actions=[],S.client.hoard.last_sync=Date.now(),SD.squeak_more(TX.tx("Saved in $1",this.options().identifier)),S.cloud.status=S.IS_LOADED,save_client()},function(e){DEBUG&&console.debug("...cloud save failed "+e),SD.squeak_more({severity:"error",message:TX.tx("Failed to save in $1: $2",this.options().identifier,e)}),cloud_ok=!1,save_client()})},update_cloud_store=function(cloard){cloard.actions=cloard.actions.concat(S.client.hoard.actions),S.cloud.store?(DEBUG&&console.debug("...save to cloud"),SD.squeak_more({severity:"while",message:TX.tx("Saving in $1",S.cloud.store.options().identifier)}),S.cloud.status=S.PENDING_SAVE,Utils.soon(function(){write_cloud_store(cloard)})):(DEBUG&&console.debug("...no cloud store"),save_client())},construct_new_cloud=function(){DEBUG&&console.debug("...construct cloud ");var cloard=new Hoard;S.client.hoard.reconstruct_actions(function(a,next){cloard.actions.push({type:a.type,time:a.time,data:a.data,path:a.path.slice()}),next&&next()},function(){update_cloud_store(cloard)})},cloud_store_read_ok=function(data){var cloard;DEBUG&&console.debug("...cloud read OK ");try{cloard=new Hoard(JSON.parse(data)),S.cloud.status=S.IS_LOADED}catch(e){return DEBUG&&console.debug("Cloud hoard JSON parse failed: "+e),SD.squeak_more({severity:"error",message:TX.tx("$1 hoard can't be read for update",this.options().identifier)}),S.cloud.status=S.IS_CORRUPT,cloud_ok=!1,void construct_new_cloud()}S.cloud.status===S.IS_LOADED&&(DEBUG&&console.debug("...merge cloud "),S.client.hoard.merge_from_cloud(cloard,ST.action)),S.cloud.status!==S.IS_LOADED||0!==S.client.hoard.actions.length?(DEBUG&&console.debug("...update from cloud "),update_cloud_store(cloard)):Utils.soon(save_client)},cloud_store_read_failed=function(e){DEBUG&&console.debug("...cloud read failed "+e),e===AbstractStore.NODATA?(DEBUG&&console.debug(this.options().identifier+" contains NODATA"),S.cloud.status=S.IS_EMPTY,construct_new_cloud()):(SD.squeak_more({severity:"error",message:TX.tx("Failed to refresh from $1: $2",this.options().identifier,e)}),cloud_ok=!1,Utils.soon(save_client))};DEBUG&&console.debug("Saving; client "+S.client.status+"; cloud "+S.cloud.status),S.cloud.status===S.NEW_SETTINGS||S.cloud.status===S.IS_EMPTY?(DEBUG&&console.debug("...constructing new cloud because settings"),construct_new_cloud()):(DEBUG&&console.debug("...reloading cloud"),S.cloud.store.reads(S.client.hoard.options.store_path,cloud_store_read_ok,cloud_store_read_failed))},S.update_save=function(){$("#authenticated_undo").toggle(ST.can_undo()),$("#extras_autosave").val(S.client.hoard.options.autosave?"on":"off");var us=S.unsaved_changes(3),$sb=$("#authenticated_save");null!==us?S.client.hoard.options.autosave?S.save_hoards():($sb.attr("title",TX.tx("Save is required because: ")+us),$sb.show()):$("#authenticated_save").hide()},S.hoards_loaded=function(){S.authenticated(),$(window).on("beforeunload",function(){var us=S.unsaved_changes(10);return null!==us?us=TX.tx("You have unsaved changes")+"\n"+us+"\n"+TX.tx("Are you really sure?"):void 0}),Utils.sometime("update_save"),Utils.sometime("check_alarms"),Utils.sometime_is_now()},S.load_cloud_hoard=function(){S.cloud.store?(DEBUG&&console.debug("Reading cloud "+S.cloud.store.options().identifier),S.cloud.store.reads(S.client.hoard.options.store_path,function(data){var hoard;DEBUG&&console.debug(this.options().identifier+" is ready");try{hoard=JSON.parse(data)}catch(e){return DEBUG&&console.debug("Client hoard JSON parse failed: "+e),SD.squeak({title:TX.error(),severity:"error",message:TX.tx("$1 hoard exists, but can't be read.",this.options().identifier)+" "+TX.tx("Check that you have the correct password.")}),S.cloud.status=S.IS_CORRUPT,void Utils.soon(S.hoards_loaded)}S.get_updates_from_cloud(new Hoard(hoard),S.hoards_loaded)},function(e){e===AbstractStore.NODATA?(DEBUG&&console.debug(this.options().identifier+" contains NODATA"),S.cloud.status=S.IS_EMPTY):(DEBUG&&console.debug(this.options().identifier+" has NODATA: "+e),SD.squeak({title:TX.error(),severity:"error",message:TX.tx("Could not load cloud hoard.")}),SD.squeak_more(TX.tx("Check that you have the correct password."))),Utils.soon(S.hoards_loaded)})):S.hoards_loaded()},S.init_client_hoard=function(){DEBUG&&console.debug("Setting up client hoard"),S.client.hoard=new Hoard,S.client.status=S.IS_EMPTY,S.cloud.store&&S.cloud.store.options().needs_path?SD.store_settings(S.load_cloud_hoard):S.load_cloud_hoard()},S.load_client_hoard=function(){var rebuild_hoard=function(){DEBUG&&console.debug("Reconstructing UI tree from cache"),S.client.hoard.reconstruct_actions(function(a,next){ST.action(a),next&&next()},function(){$(".modified").removeClass("modified");var i,p,$node,as=S.client.hoard.actions;for(i=0;i<as.length;i++)for(p=as[i].path.slice();p.length>0;){if($node=ST.get_node(p)){$node.addClass("modified");break}p.pop()}Utils.soon(S.load_cloud_hoard)})};DEBUG&&console.debug("Load client store"),S.client.store.reads("S."+S.client.store.user(),function(data){try{S.client.hoard=new Hoard(JSON.parse(data)),S.client.status=S.IS_LOADED}catch(e){return DEBUG&&console.debug("Caught "+e),SD.squeak({title:TX.error(),severity:"error",message:TX.tx("$1 hoard exists, but can't be read.",this.options().identifier),after_close:function(){Utils.sometime("init_application")}}),void SD.squeak_more(TX.tx("Check that you have the correct password."))}(S.client.store&&S.client.store.options().needs_path||S.cloud.store&&S.cloud.store.options().needs_path)&&!S.client.hoard.options.store_path?SD.store_settings(rebuild_hoard):rebuild_hoard()},function(e){e===AbstractStore.NODATA?(DEBUG&&console.debug(this.options().identifier+" contains NODATA"),Utils.soon(S.init_client_hoard)):SD.squeak({title:TX.error(),severity:"error",message:TX.tx("$1 store error: $2",this.options().identifier,e),after_close:function(){Utils.sometime("init_application")}})})},S.identify_user=function(){var uReq=!0,pReq=!0;S.cloud.store&&"undefined"!=typeof S.cloud.store.user()?(DEBUG&&console.debug("Cloud user is preferred: "+S.cloud.store.user()),S.client.store.user(S.cloud.store.user()),uReq=!1):S.client.store&&"undefined"!=typeof S.client.store.user()&&(DEBUG&&console.debug("Client user is available: "+S.client.store.user()),S.cloud.store&&S.cloud.store.user(S.client.store.user()),uReq=!1),S.cloud.store&&"undefined"!=typeof S.cloud.store.pass()?(DEBUG&&console.debug("Cloud pass is preferred"),S.client.store&&S.client.store.pass(S.cloud.store.pass()),pReq=!1):S.client.store&&"undefined"!=typeof S.client.store.pass()&&(DEBUG&&console.debug("Client pass is available"),S.cloud.store&&S.cloud.store.pass(S.client.store.pass()),pReq=!1),uReq||pReq?SD.login({store:S.client.store,on_signin:function(user,pass){DEBUG&&console.debug("Login prompt said user was "+user),S.client.store.user(user),S.client.store.pass(pass),S.cloud.store&&(S.cloud.store.user(user),S.cloud.store.pass(pass)),S.load_client_hoard()},user_required:uReq,pass_required:pReq}):S.load_client_hoard()},S.init_client_store=function(){new EncryptedStore({understore:function(params){return new LocalStorageStore(params)},ok:function(){DEBUG&&console.debug(this.options().identifier+" store is ready"),S.client.store=this,$("#authmessage").text(TX.tx("Loading...")),Utils.soon(S.identify_user)},fail:function(e){SD.squeak({title:TX.error(),severity:"error",message:TX.tx("Encryption error: $1",e)})}})},S.init_cloud_store=function(){var p={ok:function(){S.cloud.store=this,Utils.soon(S.init_client_store)},fail:function(e){SD.squeak({title:TX.warning(),severity:"warning",message:TX.tx("Could not open cloud store: $1",e),after_close:function(){S.init_client_store()}}),SD.squeak_more({severity:"warning",message:TX.tx("If you continue, only the client store will be available")})}};return p.understore=function(pp){return S.USE_STEGANOGRAPHY?(pp.understore=function(ppp){return new SQUIRREL_STORE(ppp)},new StegaStore(pp)):new SQUIRREL_STORE(pp)},new EncryptedStore(p)},S.search=function(s){var re=new RegExp(s,"i"),hits=[];$(".key,.value").each(function(){$(this).text().match(re)&&hits.push(this)}),$("#search_hits").text(TX.tx("$1 found",hits.length)),0===hits.length?SD.squeak({message:TX.tx("'$1' not found",s)}):($("li.treenode-open").each(function(){$(this).treenode("close")}),$.each(hits,function(n,v){$(v).parents(".treenode.treenode-collection").each(function(){$(this).treenode("open")})}))},$(document).ready(function(){var qs=Utils.query_string(),unco="uncompressed"===document.location.href.match(/\.(min|uncompressed)\.html/)[1];qs.debug&&(DEBUG=!0),DEBUG||$.ajaxSetup({cache:!0});var store=qs.store||"TestStore";"undefined"!=typeof qs.steg&&(S.USE_STEGANOGRAPHY=!0);var store_bits=["common/"+store+".min.js"];S.USE_STEGANOGRAPHY?(store_bits.push("common/Steganographer.min.js"),store_bits.push("common/StegaStore.min.js")):$(".using_steganography").remove(),Utils.load(store_bits,unco,function(){TX.init(function(){S.init_ui(),S.init_application()})})})}(jQuery,Squirrel);
//# sourceMappingURL=Squirrel.map