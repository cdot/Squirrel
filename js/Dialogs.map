{"version":3,"sources":["js/Dialogs.js"],"names":["$","S","SD","Dialog","ST","Tree","squeak_more","p","remove","message","severity","append","play_action","action","more","res","client","hoard","record_action","e","$node","Utils","sometime","squeak","title","TX","error","login","options","$dlg","toggle","user_required","pass_required","$user","$pass","$signin","sign_in","evt","close_dialog","off","getTapEvent","on_signin","call","store","val","on","user","pass","attr","focus","text","init_dialog","open_dialog","delete_node","data","id","type","path","get_path","join","hasClass","about","pick","find","removeClass","i","$f","$which","$from","item_clicked","ii","this","addClass","length","children","appendTo","charAt","last","randomise","generate_password","charset","constraints","tx","$ibling","slice","k","pop","push","$new","my_key","constraints_key","vre","RegExp","replace","removeData","parent","each","v","m","exec","trigger","search","alarm","numb","TIMEUNITS","days","last_time","alarmd","Date","MSPERDAY","toLocaleDateString","deltaTimeString","ss_change_image","fail","file","files","read_file","ArrayBufferToBase64","steg","Steganographer","inject","DEBUG","console","debug","h","naturalHeight","w","naturalWidth","height","html","status","IS_LOADED","NEW_SETTINGS","cloud","store_settings","chain","hide","store_path","cb","empty","chpw","prop","c","json","datum","JSON","parse","insert_data","select","theme","filter","href","indexOf","replaceWith","extras","autosave","USE_STEGANOGRAPHY","needs_path","add","$parent","is_value","validate","$input","enabled","test","$ul","compare","button","autocomplete","source","dialog","add_child_node","undefined","show","extra","opts","modal","width","closeOnEscape","isTouchCapable","position","my","at","of","extend","after_close","ac","close","jQuery","Squirrel"],"mappings":"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","file":"js/Dialogs.min.js","sourcesContent":["/*@preserve Copyright (C) 2015 Crawford Currie http://c-dot.co.uk license MIT*/\n\n/* eslint-env jquery */\n/* global Utils */\n/* global TX */\n/* global DEBUG */\n/* global Steganographer */\n/* global Squirrel */\n\n/**\n * Common code for dialogs. This is enhanced by mixins in the mobile\n * and desktop domains.\n*/\n\n(function($, S) {\n    \"use strict\";\n    var SD = S.Dialog;\n    var ST = S.Tree;\n\n    // The code below requires the environment to define the following\n    // extra methods in the namespace:\n    //\n    // SD.squeak(p) where p is a string or a structure:\n    //    title\n    //    severity (error, warning, notice, while)\n    //    message (string or $object or element)\n    //    after_close\n    // SD.init_dialog($dlg)\n    // SD.open_dialog($dlg)\n    // SD.close_dialog($dlg)\n\n    SD.squeak_more = function(p) {\n        $(\".dlg-while\").remove();\n        if (typeof p === \"string\")\n            p = { message: p, severity: \"notice\" };\n\n        if (!p.severity)\n            p.severity = \"notice\";\n\n        $(\"#squeak_message\").append(\n            $(\"<div class='dlg-\" + p.severity + \"'></div>\")\n                .append(p.message));\n    };\n\n    SD.play_action = function(action, more) {\n        var res = S.client.hoard.record_action(\n            action,\n            function(e) {\n                ST.action(\n                    e,\n                    true,\n                    function($node) {\n                        if (more)\n                            more($node);\n                        Utils.sometime(\"update_save\");\n                    });\n            });\n        if (res !== null)\n            SD.squeak({\n                title: TX.error(),\n                severity: \"error\",\n                message: res.message\n            });\n    };\n\n    /**\n     * options:\n     * ok - function called on dialog closed, passing the user and password\n     *      and with this set to the options.store\n     * user_required - set true if the store requires a username\n     * pass_required - set true if the store requires a password\n     * store - store we are logging in to\n     */\n    SD.login = function(options) {\n        var $dlg = $(\"#login\");\n\n        $(\"#login_uReq\").toggle(options.user_required);\n        $(\"#login_pReq\").toggle(options.pass_required);\n\n        var $user = $(\"#login_user\");\n        var $pass = $(\"#login_pass\");\n        var $signin = $(\"#login_signin\");\n\n        var sign_in = function(evt) {\n            SD.close_dialog($dlg);\n            $signin.off($.getTapEvent());\n            $user.off(\"change\");\n            $pass.off(\"change\");\n            options.on_signin.call(options.store,\n                                   $user.val(),\n                                   $pass.val());\n            return true;\n        };\n\n        $signin\n            .off($.getTapEvent())\n            .on($.getTapEvent(), \"p\", sign_in);\n\n        $user.off(\"change\").val(options.store.user());\n        $pass.off(\"change\").val(options.store.pass());\n\n        if (options.user_required) {\n            $user.attr(\"autofocus\", \"autofocus\");\n            if (options.pass_required) {\n                $user\n                    .off(\"change\")\n                    .on(\"change\", function() {\n                        $pass.focus();\n                    });\n            } else {\n                $user\n                    .off(\"change\")\n                    .on(\"change\", sign_in);\n            }\n        }\n        if (options.pass_required) {\n            $(\"#login_foruser\")\n                .toggle(options.store.user() !== null)\n                .text(options.store.user() || \"\");\n            $pass.attr(\"autofocus\", \"autofocus\");\n            if (options.user_required) {\n                $pass.on(\"change\", function() {\n                    $signin.focus();\n                });\n            } else {\n                $pass.on(\"change\", sign_in);\n            }\n        }\n\n        SD.init_dialog($dlg);\n\n        SD.open_dialog($dlg);\n    };\n\n    /**\n     * Confirm deletion of a node\n     */\n    SD.delete_node = function($node) {\n        var $dlg = $(\"#delete_node\");\n        $dlg.data(\"node\", $node);\n\n        SD.init_dialog(\n            $dlg,\n            function($dlg, id) {\n                $(id + \"ok\").on($.getTapEvent(), function() {\n                    SD.close_dialog($dlg);\n                    var res = S.client.hoard.record_action(\n                        {\n                            type: \"D\",\n                            path: ST.get_path($dlg.data(\"node\"))\n                        },\n                        function(e) {\n                            ST.action(\n                                e, true,\n                                function() {\n                                    Utils.sometime(\"update_save\");\n                                });\n                        });\n                    if (res !== null) {\n                        SD.squeak({\n                            title: TX.error(),\n                            severity: \"error\",\n                            message: res.message\n                        });\n                        return false;\n                    }\n                    return true;\n                });\n                $(\"#delete_node_cancel\").on($.getTapEvent(), function() {\n                    SD.close_dialog($dlg);\n                    return false;\n                });\n            });\n\n        $(\"#delete_node_path\").text(\n            ST.get_path($node).join(\"/\"));\n        $(\"#delete_node_coll\").toggle(!$node.hasClass(\"tree-leaf\"));\n        \n        SD.open_dialog($dlg);\n    };\n\n    SD.about = function($node) {\n        var $dlg = $(\"#about\");\n        SD.init_dialog($dlg);\n        SD.open_dialog($dlg);\n    };\n\n    SD.pick = function($node) {\n        var $dlg = $(\"#pick\");\n\n        SD.init_dialog($dlg, function($dlg, id) {\n            $(id + \"clear\")\n                .on($.getTapEvent(), function() {\n                    $dlg.find(\".dlg-picked\").removeClass(\"dlg-picked\");\n                });\n        });\n\n        var val = $node.find(\".tree-value:first\").text();\n        var $which = $(\"#pick_which\");\n        var $from = $(\"#pick_from\");\n        var i, $f;\n\n        $(\"#pick\").find(\".dlg-pick-cell\").remove();\n\n        var item_clicked = function() {\n            var ii = $(this).data(\"i\");\n            $dlg\n                .find(\"td.i\" + ii)\n                .addClass(\"dlg-picked\");\n        };\n\n        for (i = 0; i < val.length; i++) {\n            $f = $from.children(\"td.i\" + i);\n            if ($f.length === 0) {\n                $(\"<td></td>\")\n                    .data(\"i\", i)\n                    .addClass(\"dlg-pick-cell i\" + i)\n                    .text(i + 1)\n                    .on($.getTapEvent(), item_clicked)\n                    .appendTo($which);\n                $f = $(\"<td></td>\")\n                    .data(\"i\", i)\n                    .addClass(\"dlg-pick-cell i\" + i)\n                    .on($.getTapEvent(), item_clicked)\n                    .appendTo($from);\n            }\n            $f.text(val.charAt(i));\n        }\n\n        while (i < $from.children(\"td\").length) {\n            $from.children(\"td\").last().remove();\n            i++;\n        }\n\n        $dlg.find(\".dlg-picked\").removeClass(\"dlg-picked\");\n        \n        SD.open_dialog($dlg);\n    };\n\n    /**\n     * Password generation for the given leaf node\n     */\n    SD.randomise = function($node) {\n        var id = \"#randomise\";\n        var $dlg = $(id);\n        id += \"_\";\n\n        SD.init_dialog(\n            $dlg,\n            function($dlg, id) {\n                $(id + \"again\").on($.getTapEvent(), function() {\n                    $(id + \"idea\").text(Utils.generate_password(\n                        {\n                            length: $(id + \"len\").val(),\n                            charset: $(id + \"chs\").val()\n                        }));\n                    return false;\n                });\n                $(id + \"use\").on($.getTapEvent(), function() {\n                    SD.close_dialog($dlg);\n                    SD.play_action(\n                        { \n                            type: \"E\",\n                            path: ST.get_path($dlg.data(\"node\")),\n                            data: $(id + \"idea\").text()\n                        });\n                    return true;\n                });\n                $(id + \"remember\").on($.getTapEvent(), function() {\n                    var constraints = $(id + \"len\").val() +\n                        TX.tx(\" characters from \") +\n                        '[' + $(id + \"chs\").val() + ']';\n                    var $ibling = $dlg.data(\"constraints\");\n                    if ($ibling) {\n                        if (constraints != $ibling.data(\"value\")) {\n                            SD.play_action(\n                                { \n                                    type: \"E\",\n                                    path: ST.get_path($ibling),\n                                    data: constraints\n                                }, function() {\n                                    $ibling.data(\"value\", constraints);\n                                });\n                        }\n                    } else {\n                        var $node = $dlg.data(\"node\");\n                        var p = ST.get_path($node).slice();\n                        var k = TX.tx(\"$1 constraints\", p.pop());\n                        p.push(k); \n                        SD.play_action(\n                            { \n                                type: \"N\",\n                                path: p,\n                                data: constraints\n                            }, function($new) {\n                                $dlg.data(\"constraints\", $new);\n                            });\n                    }\n                });\n            });\n\n        var my_key = $node.data(\"key\");\n        $dlg.data(\"node\", $node);\n\n        var constraints_key = TX.tx(\"$1 constraints\", $node.data(\"key\"));\n        var vre = new RegExp(\n            \"(\\\\d+)\" +\n                TX.tx(\" characters from \")\n                .replace(/[-\\/\\\\^$*+?.()|\\[\\]\\{\\}]/g, \"\\\\$&\")\n                + \"\\\\[(.*)\\\\]\");\n        $dlg.removeData(\"constraints\");\n        $node.parent().children(\".tree-leaf\").each(function() {\n            var $ibling = $(this);\n            var k = $ibling.data(\"key\");\n            if (k == constraints_key) {\n                var v = $ibling.data(\"value\");\n                var m = vre.exec(v);\n                if (m) {\n                    $dlg.data(\"constraints\", $ibling);\n                    $(id + \"len\").val(m[1]);\n                    $(id + \"chs\").val(m[2]);\n                }\n            }\n        });\n\n        var path = ST.get_path($node);\n        $(id + \"path\").text(path.join(\"/\"));\n        $(id + \"key\").text(my_key);\n        $(id + \"again\").trigger(\"click\");\n\n        SD.open_dialog($dlg);\n    };\n\n    SD.search = function() {\n        var $dlg = $(\"#search\");\n\n        SD.init_dialog(\n            $dlg,\n            function ($dlg, id) {\n                $(id + \"ok\")\n                    .on($.getTapEvent(), function() {\n                        SD.close_dialog($dlg);\n                        S.search($(\"#search_string\").val());\n                    });\n                $(id + \"string\")\n                    .on(\"change\", function() {\n                        $(\"#search_ok\").trigger($.getTapEvent());\n                    });\n            });\n        SD.open_dialog($dlg);\n    };\n\n    /**\n     * Reminder setting dialog\n     */\n    SD.alarm = function($node) {\n        var $dlg = $(\"#alarm\");\n\n        SD.init_dialog($dlg, function($dlg, id) {\n \n            $dlg.data(\"update_next\", function() {\n                var numb = $(id + \"number\").val();\n                // Convert to days\n                numb = numb * Utils.TIMEUNITS[$(id + \"units\").val()].days;\n                var last_time = $dlg.data(\"node\").data(\"last-time\");\n                var alarmd = new Date(last_time + numb * Utils.MSPERDAY);\n                $('#alarm_when').text(alarmd.toLocaleDateString());\n                $(id + \"next\").text(Utils.deltaTimeString(alarmd));\n            });\n\n            $(id + \"units\")\n                .on(\"change\", function() {\n                    $dlg.data(\"update_next\").call();\n                });\n\n            $(id + \"number\")\n                .on(\"change\", function() {\n                    $dlg.data(\"update_next\").call();\n                });\n\n            $(id + \"set\")\n                .on($.getTapEvent(), function() {\n                    SD.close_dialog($dlg);\n                    var numb = $(id + \"number\").val()\n                        * Utils.TIMEUNITS[$(id + \"units\").val()].days;\n                    SD.play_action(\n                        { type: \"A\",\n                          path: ST.get_path($dlg.data(\"node\")),\n                          data: numb\n                        });\n                    return false;\n                });\n\n            $(id + \"clear\")\n                .on($.getTapEvent(), function() {\n                    SD.play_action(\n                        { type: \"C\",\n                          path: ST.get_path($dlg.data(\"node\"))\n                        });\n                    SD.close_dialog($dlg);\n                    return false;\n                });\n\n        });\n        \n        $(\"#alarm_path\").text(ST.get_path($node).join(\"/\"));\n\n        $dlg.data(\"node\", $node);\n        $dlg.data(\"update_next\").call();\n\n        SD.open_dialog($dlg);\n    };\n\n    /* Helper */\n    SD.ss_change_image = function() {\n        var fail = function(e) {\n            $(\"#store_settings_message\").text(TX.tx(\n                \"Cannot use this image because of this error: $1\", e));\n        };\n        var file = $(this)[0].files[0];\n        Utils.read_file(\n            file,\n            function(data) {\n                data = \"data:\" + file.type + \";base64,\"\n                    + Utils.ArrayBufferToBase64(data);\n                if (data !== $(\"#stegamage\").attr(\"src\", data)) {\n                    $(\"#stegamage\")\n                        .attr(\"src\", data)\n                        .off(\"load\")\n                        .on(\"load\", function() {\n                            $(this).off(\"load\");\n                            // Check that we can use the image.\n                            var steg = new Steganographer(this);\n                            try {\n                                steg.inject(\"tada\");\n                            } catch (e) {\n                                if (DEBUG) console.debug(\"Caught \" + e);\n                                fail(e);\n                                return;\n                            }\n                            $(\"#store_settings #ok\").attr(\"disabled\", false);\n                            var h = this.naturalHeight;\n                            var w = this.naturalWidth;\n                            this.height = 100;\n                            $(\"#store_settings_message\")\n                                .html(\"<br>\" + w + \" x \" + h);\n                            if (S.client.status === S.IS_LOADED)\n                                S.client.status = S.NEW_SETTINGS;\n                            if (S.cloud.status === S.IS_LOADED)\n                                S.cloud.status = S.NEW_SETTINGS;\n                            Utils.sometime(\"update_save\");\n                        });\n                }\n            },\n            fail,\n            \"arraybuffer\");\n    };\n\n    SD.store_settings = function(chain) {\n        var $dlg = $(\"#store_settings\");\n\n        SD.init_dialog($dlg, function($dlg, id) {\n            $(id + \"file\")\n                .hide()\n                .on($.getTapEvent(), function (e) {\n                    SD.ss_change_image();\n                });\n\n            $(id + \"image\")\n                .on($.getTapEvent(), function(e) {\n                    $(\"#store_settings_file\").trigger(\"change\", e);\n                });\n\n            $(id + \"storepath\").on(\"keyup\", function(e) {\n                if ($(\"#store_settings_storepath\").val() === \"\") {\n                    $(\"#store_settings_message\").text(TX.tx(\n                        \"Store path may not be empty\"));\n                    return false;\n                }\n                if (S.client.hoard.options.store_path !==\n                    $(\"#store_settings_storepath\").val()) {\n                    S.client.hoard.options.store_path =\n                        $(\"#store_settings_storepath\").val();\n                    if (S.client.status === S.IS_LOADED)\n                        S.client.status = S.NEW_SETTINGS;\n                    // No - the cloud isn't affected by the store path,\n                    // so don't mark it as changed\n                    // if (S.cloud.status === S.IS_LOADED)\n                    //     S.cloud.status = S.NEW_SETTINGS;\n                    Utils.sometime(\"update_save\");\n                }\n                return true;\n            });\n\n            $(id + \"ok\")\n                .on($.getTapEvent(), function (e) {\n                    if ($(\"#store_settings_storepath\").val() === \"\") {\n                        $(\"#store_settings_message\").text(TX.tx(\n                            \"Store path may not be empty\"));\n                        return false;\n                    }\n                    SD.close_dialog($dlg);\n                    var cb = $dlg.data(\"callback\");\n                    if (typeof cb === \"function\")\n                        cb();\n                });\n        });\n\n        $(\"#store_settings_message\").empty();\n        $dlg.data(\"callback\", chain);\n        $(\"#store_settings_storepath\").val(\n            S.client.hoard.options.store_path);\n\n        SD.open_dialog($dlg);\n    };\n\n    /**\n     * Master password change dialog\n     */\n    SD.chpw = function() {\n        var $dlg = $(\"#chpw\");\n\n        SD.init_dialog($dlg, function($dlg, id) {\n            $(id + \"show\")\n                .on(\"change\", function() {\n                    if ($(\"#chpw_show\").prop(\"checked\")) {\n                        $(\"#chpw_pass\").attr(\"type\", \"text\");\n                        $(\"#chpw_conf\").attr(\"type\", \"text\");\n                    } else {\n                        $(\"#chpw_pass\").attr(\"type\", \"password\");\n                        $(\"#chpw_conf\").attr(\"type\", \"password\");\n                    }\n                });\n\n            $dlg.data(\"validate\", function() {\n                var p = $(\"#chpw_pass\").val(),\n                c = $(\"#chpw_conf\").val();\n\n                $(\"#chpw_nomatch\").toggle(p !== c);\n                return (p === c);\n            });\n\n            $(id + \"conf\").on(\"change\", function() {\n                $dlg.data(\"validate\").call();\n            });\n\n            $(id + \"set\")\n                .on($.getTapEvent(), function () {\n                    if (!$dlg.data(\"validate\").call())\n                        return false;\n                    SD.close_dialog($dlg);\n                    var p = $(\"#chpw_pass\").val();\n                    S.client.store.pass(p);\n                    S.client.status = S.NEW_SETTINGS;\n                    S.cloud.store.pass(p);\n                    S.cloud.status = S.NEW_SETTINGS;\n                    Utils.sometime(\"update_save\");\n\n                    return true;\n                });\n        });\n\n        $dlg.data(\"validate\").call();\n\n        SD.open_dialog($dlg);\n    };\n\n    SD.json = function() {\n        var $dlg = $(\"#json\");\n\n        SD.init_dialog($dlg, function($dlg, id) {\n            $(id + \"text\")\n                .on(\"input\", function () {\n                    $(\"#json_ok\").prop(\"disabled\", false);\n                });\n\n            $(id + \"ok\")\n                .on($.getTapEvent(), function () {\n                    SD.close_dialog($dlg);\n                    var datum;\n                    try {\n                        datum = JSON.parse($(\"#json_text\").val());\n                    } catch (e) {\n                        SD.squeak({\n                            title: TX.tx(\"JSON could not be parsed\"),\n                            severity: \"error\",\n                            message: e\n                        });\n                        return false;\n                    }\n                    $(\"#json_ok\").prop(\"disabled\", true);\n                    if (DEBUG) console.debug(\"Importing...\");\n                    S.insert_data([], datum);\n                    return true;\n                });\n        });\n\n        var data = S.client.hoard.JSON();\n        $(\"#json_text\")\n            .text(data)\n            .select();\n        $(\"#json_ok\").prop(\"disabled\", true);\n\n        SD.open_dialog($dlg);\n    };\n\n    SD.theme = function() {\n        var $dlg = $(\"#theme\");\n\n        SD.init_dialog($dlg, function($dlg, id) {\n            $(id + \"select\")\n                .on(\"change\", function () {\n                    var theme = $(this).val();\n                    $(\"link\").filter(function() {\n                        return this.href && this.href.indexOf('/themes/') > 0;\n                    }).each(function() {\n                        this.href = this.href.replace(\n                                /\\/themes\\/[^\\/]+/, \"/themes/\" + theme);\n                        $(this).replaceWith($(this));\n                        Utils.sometime(\"reset_styling\");\n                    });\n\n                });\n        });\n\n        SD.open_dialog($dlg);\n    };\n\n    SD.extras = function() {\n        var $dlg = $(\"#extras\");\n\n        SD.init_dialog($dlg, function($dlg, id) {\n            $(id + \"autosave\")\n                .on(\"change\", function(e) {\n                    S.client.hoard.options.autosave =\n                        ($(\"#extras_autosave\").val() === \"on\");\n                    Utils.sometime(\"update_save\");\n                });\n\n            $(id + \"chpw\").on($.getTapEvent(), function() {\n                SD.close_dialog($dlg);\n                SD.chpw();\n            });\n\n            $(id + \"chss\").on($.getTapEvent(), function() {\n                SD.close_dialog($dlg);\n                SD.store_settings();\n            });\n            $(id + \"theme\").on($.getTapEvent(), function() {\n                SD.close_dialog($dlg);\n                SD.theme();\n            });\n\n            $(id + \"json\").on($.getTapEvent(), function() {\n                SD.close_dialog($dlg);\n                SD.json();\n            });\n\n            $(id + \"about\").on($.getTapEvent(), function() {\n                SD.close_dialog($dlg);\n                SD.about();\n            });\n        });\n\n        if (!(S.USE_STEGANOGRAPHY\n              || S.cloud.store\n              && S.cloud.store.options().needs_path)) {\n            $(\"#extras_chss\").hide();\n        }\n\n        $(\"#extras_autosave\").val(\n            S.client.hoard.options.autosave ? \"on\" : \"off\");\n\n        SD.open_dialog($dlg);\n    };\n\n    SD.add = function($parent, is_value) {\n        var id = \"#add\"\n        var $dlg = $(id);\n        id += \"_\";\n        $dlg.data(\"parent\", $parent);\n        $dlg.data(\"adding_value\", is_value);\n        var $ul = $parent.find(\"ul:first\");\n\n        // Disable OK if key value exists or is invalid\n        function validate($input) {\n            var enabled = true;\n            var val = $input.val();\n\n            if (!/\\S/.test(val)) // empty?\n                enabled = false;\n            else {\n                $ul.children(\".tree-node\").each(function() {\n                    if (ST.compare($(this).data(\"key\"), val) == 0) {\n                        enabled = false;\n                        return false;\n                    }\n                });\n            }\n            \n            if (enabled) {\n                $(id + \"ok\").button(\"enable\");\n                $(id + \"key\")\n                    .removeClass(\"dlg-disabled\")\n                    .attr(\"title\", TX.tx(\"Enter new name\"));\n            } else {\n                $(id + \"ok\").button(\"disable\");\n                $(id + \"key\")\n                    .addClass(\"dlg-disabled\")\n                    .attr(\"title\", TX.tx(\"Name is already in use\"));\n            }\n        }\n\n        SD.init_dialog($dlg, function($dlg, id) {\n            $(id + \"key\")\n                .on(\"input\", function() { validate($(this)); })\n                .autocomplete({ source: [\n                    TX.tx(\"User\"), TX.tx(\"Pass\") ]});\n\n            $(id + \"ok\")\n                .button()\n                .on($.getTapEvent(), function() {\n                    $dlg.dialog(\"close\");\n                    var $parent = $dlg.data(\"parent\");\n                    S.add_child_node(\n                        $parent, $(id + \"key\").val(),\n                        $dlg.data(\"adding_value\") ?\n                            $(id + \"value\").val() : undefined);\n                    return false;\n                });\n        });\n\n        $(id + \"path\").text(ST.get_path($parent).join(\" > \") + \" > \");\n        if (is_value) {\n            $dlg.attr(\"title\", TX.tx(\"Add value\"));\n            $(id + \"help\").text(TX.tx(\n                \"Enter the name and value for the new entry\"));\n            $(id + \"value_parts\").show();\n            $(id + \"key\").autocomplete(\"enable\");\n        } else {\n            $dlg.attr(\"title\", TX.tx(\"Add folder\"));\n            $(id + \"help\").text(TX.tx(\n                \"Enter the name for the new folder\"));\n            $(id + \"value_parts\").hide();\n            $(id + \"key\").autocomplete(\"disable\");\n        }\n\n        validate($(id + \"key\"));\n\n        SD.open_dialog($dlg);\n    };\n    \n    SD.init_dialog = function($dlg, extra) {\n        if ($dlg.hasClass(\"dlg-initialised\"))\n            return;\n        $dlg.addClass(\"dlg-initialised\");\n        var id = \"#\" + $dlg.attr(\"id\") + \"_\";\n        $(id + \"cancel\")\n            .button()\n            .on($.getTapEvent(), function() {\n                $dlg.dialog(\"close\");\n                return false;\n            });\n        if (extra)\n            extra($dlg, id);\n    };\n\n    SD.open_dialog = function($dlg, opts) {\n        var options = {\n            modal: true,\n            width: \"auto\",\n            closeOnEscape: false\n        };\n        if ($.isTouchCapable()) {\n            options.position = {\n                my: \"left top\",\n                at: \"left top\",\n                of: $(\"body\")\n            }\n        };\n        if (opts)\n            $.extend(options, opts);\n        \n        $dlg.dialog(options);\n    };\n\n    SD.close_dialog = function($dlg) {\n        $dlg.dialog(\"close\");\n    };\n\n    /**\n     * Generate a modal alert dialog\n     * @param p either a string message, or a structure containing:\n     *  title - dialog title\n     *  message - (string or $object or elem)\n     *  severity - may be one of notice (default), warning, error\n     *  after_close - callback on dialog closed\n     */\n    SD.squeak = function(p) {\n        var $dlg = $(\"#squeak\");\n        if (typeof p === \"string\")\n            p = { message: p, severity: \"notice\" };\n\n        $dlg.data(\"after_close\", p.after_close);\n\n        var called_back = false;\n        SD.init_dialog($dlg, function($dlg, id) {\n            $(id + \"close\")\n                .button()\n                .on($.getTapEvent(), function(e) {\n                    var ac = $dlg.data(\"after_close\");\n                    $dlg.removeData(\"after_close\");\n                    $dlg.dialog(\"close\");\n                    if (typeof ac === \"function\")\n                        ac();\n                    return false;\n                });\n        });\n\n        $(\"#squeak_message\").empty();\n        SD.squeak_more(p);\n\n        var options = {\n            close: function() {\n                if (!called_back) {\n                    if (typeof p.after_close === \"function\")\n                        p.after_close();\n                }\n            }\n        };\n        if (p.title)\n            options.title = p.title;\n        \n        SD.open_dialog($dlg, options);\n    };\n})(jQuery, Squirrel);\n"]}