{"version":3,"sources":["js/Dialogs.js"],"names":["$","S","validate_unique","$node","$input","$ul","find","enabled","val","test","children","each","ST","compare","this","data","id","button","removeClass","attr","TX","tx","addClass","SD","Dialog","Tree","squeak_more","p","remove","message","severity","append","play_action","action","more","res","client","hoard","record_action","e","Utils","sometime","squeak","title","error","login","options","$dlg","toggle","user_required","pass_required","$user","$pass","$signin","sign_in","close_dialog","off","getTapEvent","on_signin","call","store","on","user","pass","focus","text","init_dialog","open_dialog","delete_node","type","path","get_path","join","hasClass","about","pick","i","$f","$which","$from","item_clicked","ii","length","appendTo","charAt","last","randomise","generate_password","charset","constraints","$ibling","slice","k","pop","push","$new","my_key","constraints_key","vre","RegExp","replace","removeData","parent","v","m","exec","trigger","search","alarm","numb","TIMEUNITS","days","last_time","alarmd","Date","MSPERDAY","toLocaleDateString","deltaTimeString","ss_change_image","fail","file","files","read_file","ArrayBufferToBase64","steg","Steganographer","inject","DEBUG","console","debug","h","naturalHeight","w","naturalWidth","height","html","status","IS_LOADED","NEW_SETTINGS","cloud","store_settings","chain","hide","store_path","cb","empty","chpw","prop","c","json","datum","JSON","parse","insert_data","select","theme","filter","href","indexOf","replaceWith","extras","autosave","USE_STEGANOGRAPHY","needs_path","insert","$parent","dialog","add_child_node","base","name","Math","max","parseInt","add","is_value","autocomplete","source","undefined","show","extra","opts","modal","width","closeOnEscape","isTouchCapable","position","my","at","of","extend","after_close","ac","close","jQuery","Squirrel"],"mappings":"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","file":"js/Dialogs.min.js","sourcesContent":["/*@preserve Copyright (C) 2015 Crawford Currie http://c-dot.co.uk license MIT*/\n\n/* eslint-env jquery */\n/* global Utils */\n/* global TX */\n/* global DEBUG */\n/* global Steganographer */\n/* global Squirrel */\n\n/**\n * Common code for dialogs. This is enhanced by mixins in the mobile\n * and desktop domains.\n*/\n\n(function($, S) {\n    \"use strict\";\n    var SD = S.Dialog;\n    var ST = S.Tree;\n\n    // The code below requires the environment to define the following\n    // extra methods in the namespace:\n    //\n    // SD.squeak(p) where p is a string or a structure:\n    //    title\n    //    severity (error, warning, notice, while)\n    //    message (string or $object or element)\n    //    after_close\n    // SD.init_dialog($dlg)\n    // SD.open_dialog($dlg)\n    // SD.close_dialog($dlg)\n\n    SD.squeak_more = function(p) {\n        $(\".dlg-while\").remove();\n        if (typeof p === \"string\")\n            p = { message: p, severity: \"notice\" };\n\n        if (!p.severity)\n            p.severity = \"notice\";\n\n        $(\"#squeak_message\").append(\n            $(\"<div class='dlg-\" + p.severity + \"'></div>\")\n                .append(p.message));\n    };\n\n    SD.play_action = function(action, more) {\n        var res = S.client.hoard.record_action(\n            action,\n            function(e) {\n                ST.action(\n                    e,\n                    true,\n                    function($node) {\n                        if (more)\n                            more($node);\n                        Utils.sometime(\"update_save\");\n                    });\n            });\n        if (res !== null)\n            SD.squeak({\n                title: TX.error(),\n                severity: \"error\",\n                message: res.message\n            });\n    };\n\n    /**\n     * options:\n     * ok - function called on dialog closed, passing the user and password\n     *      and with this set to the options.store\n     * user_required - set true if the store requires a username\n     * pass_required - set true if the store requires a password\n     * store - store we are logging in to\n     */\n    SD.login = function(options) {\n        var $dlg = $(\"#login\");\n\n        $(\"#login_uReq\").toggle(options.user_required);\n        $(\"#login_pReq\").toggle(options.pass_required);\n\n        var $user = $(\"#login_user\");\n        var $pass = $(\"#login_pass\");\n        var $signin = $(\"#login_signin\");\n\n        var sign_in = function() {\n            SD.close_dialog($dlg);\n            $signin.off($.getTapEvent());\n            $user.off(\"change\");\n            $pass.off(\"change\");\n            options.on_signin.call(options.store,\n                                   $user.val(),\n                                   $pass.val());\n            return true;\n        };\n\n        $signin\n            .off($.getTapEvent())\n            .on($.getTapEvent(), \"p\", sign_in);\n\n        $user.off(\"change\").val(options.store.user());\n        $pass.off(\"change\").val(options.store.pass());\n\n        if (options.user_required) {\n            $user.attr(\"autofocus\", \"autofocus\");\n            if (options.pass_required) {\n                $user\n                    .off(\"change\")\n                    .on(\"change\", function() {\n                        $pass.focus();\n                    });\n            } else {\n                $user\n                    .off(\"change\")\n                    .on(\"change\", sign_in);\n            }\n        }\n        if (options.pass_required) {\n            $(\"#login_foruser\")\n                .toggle(options.store.user() !== null)\n                .text(options.store.user() || \"\");\n            $pass.attr(\"autofocus\", \"autofocus\");\n            if (options.user_required) {\n                $pass.on(\"change\", function() {\n                    $signin.focus();\n                });\n            } else {\n                $pass.on(\"change\", sign_in);\n            }\n        }\n\n        SD.init_dialog($dlg);\n\n        SD.open_dialog($dlg);\n    };\n\n    /**\n     * Confirm deletion of a node\n     */\n    SD.delete_node = function($node) {\n        var $dlg = $(\"#delete_node\");\n        $dlg.data(\"node\", $node);\n\n        SD.init_dialog(\n            $dlg,\n            function($dlg, id) {\n                $(id + \"ok\").on($.getTapEvent(), function() {\n                    SD.close_dialog($dlg);\n                    var res = S.client.hoard.record_action(\n                        {\n                            type: \"D\",\n                            path: ST.get_path($dlg.data(\"node\"))\n                        },\n                        function(e) {\n                            ST.action(\n                                e, true,\n                                function() {\n                                    Utils.sometime(\"update_save\");\n                                });\n                        });\n                    if (res !== null) {\n                        SD.squeak({\n                            title: TX.error(),\n                            severity: \"error\",\n                            message: res.message\n                        });\n                        return false;\n                    }\n                    return true;\n                });\n                $(\"#delete_node_cancel\").on($.getTapEvent(), function() {\n                    SD.close_dialog($dlg);\n                    return false;\n                });\n            });\n\n        $(\"#delete_node_path\").text(\n            ST.get_path($node).join(\"/\"));\n        $(\"#delete_node_coll\").toggle(!$node.hasClass(\"tree-leaf\"));\n        \n        SD.open_dialog($dlg);\n    };\n\n    SD.about = function() {\n        var $dlg = $(\"#about\");\n        SD.init_dialog($dlg);\n        SD.open_dialog($dlg);\n    };\n\n    SD.pick = function($node) {\n        var $dlg = $(\"#pick\");\n\n        SD.init_dialog($dlg, function($dlg, id) {\n            $(id + \"clear\")\n                .on($.getTapEvent(), function() {\n                    $dlg.find(\".dlg-picked\").removeClass(\"dlg-picked\");\n                });\n        });\n\n        var val = $node.find(\".tree-value:first\").text();\n        var $which = $(\"#pick_which\");\n        var $from = $(\"#pick_from\");\n        var i, $f;\n\n        $(\"#pick\").find(\".dlg-pick-cell\").remove();\n\n        var item_clicked = function() {\n            var ii = $(this).data(\"i\");\n            $dlg\n                .find(\"td.i\" + ii)\n                .addClass(\"dlg-picked\");\n        };\n\n        for (i = 0; i < val.length; i++) {\n            $f = $from.children(\"td.i\" + i);\n            if ($f.length === 0) {\n                $(\"<td></td>\")\n                    .data(\"i\", i)\n                    .addClass(\"dlg-pick-cell i\" + i)\n                    .text(i + 1)\n                    .on($.getTapEvent(), item_clicked)\n                    .appendTo($which);\n                $f = $(\"<td></td>\")\n                    .data(\"i\", i)\n                    .addClass(\"dlg-pick-cell i\" + i)\n                    .on($.getTapEvent(), item_clicked)\n                    .appendTo($from);\n            }\n            $f.text(val.charAt(i));\n        }\n\n        while (i < $from.children(\"td\").length) {\n            $from.children(\"td\").last().remove();\n            i++;\n        }\n\n        $dlg.find(\".dlg-picked\").removeClass(\"dlg-picked\");\n        \n        SD.open_dialog($dlg);\n    };\n\n    /**\n     * Password generation for the given leaf node\n     */\n    SD.randomise = function($node) {\n        var id = \"#randomise\";\n        var $dlg = $(id);\n\n        SD.init_dialog(\n            $dlg,\n            function($dlg, id) {\n                $(id + \"_again\").on($.getTapEvent(), function() {\n                    $(id + \"_idea\").text(Utils.generate_password(\n                        {\n                            length: $(id + \"_len\").val(),\n                            charset: $(id + \"_chs\").val()\n                        }));\n                    return false;\n                });\n                $(id + \"_use\").on($.getTapEvent(), function() {\n                    SD.close_dialog($dlg);\n                    SD.play_action(\n                        { \n                            type: \"E\",\n                            path: ST.get_path($dlg.data(\"node\")),\n                            data: $(id + \"_idea\").text()\n                        });\n                    return true;\n                });\n                $(id + \"_remember\").on($.getTapEvent(), function() {\n                    var constraints = $(id + \"_len\").val() +\n                        TX.tx(\" characters from \") +\n                        '[' + $(id + \"_chs\").val() + ']';\n                    var $ibling = $dlg.data(\"constraints\");\n                    if ($ibling) {\n                        if (constraints != $ibling.data(\"value\")) {\n                            SD.play_action(\n                                { \n                                    type: \"E\",\n                                    path: ST.get_path($ibling),\n                                    data: constraints\n                                }, function() {\n                                    $ibling.data(\"value\", constraints);\n                                });\n                        }\n                    } else {\n                        var $node = $dlg.data(\"node\");\n                        var p = ST.get_path($node).slice();\n                        var k = TX.tx(\"$1 constraints\", p.pop());\n                        p.push(k); \n                        SD.play_action(\n                            { \n                                type: \"N\",\n                                path: p,\n                                data: constraints\n                            }, function($new) {\n                                $dlg.data(\"constraints\", $new);\n                            });\n                    }\n                });\n            });\n\n        var my_key = $node.data(\"key\");\n        $dlg.data(\"node\", $node);\n\n        var constraints_key = TX.tx(\"$1 constraints\", $node.data(\"key\"));\n        var vre = new RegExp(\n            \"(\\\\d+)\" +\n                TX.tx(\" characters from \")\n                .replace(/[-\\/\\\\^$*+?.()|\\[\\]\\{\\}]/g, \"\\\\$&\")\n                + \"\\\\[(.*)\\\\]\");\n        $dlg.removeData(\"constraints\");\n        $node.parent().children(\".tree-leaf\").each(function() {\n            var $ibling = $(this);\n            var k = $ibling.data(\"key\");\n            if (k == constraints_key) {\n                var v = $ibling.data(\"value\");\n                var m = vre.exec(v);\n                if (m) {\n                    $dlg.data(\"constraints\", $ibling);\n                    $(id + \"_len\").val(m[1]);\n                    $(id + \"_chs\").val(m[2]);\n                }\n            }\n        });\n\n        var path = ST.get_path($node);\n        $(id + \"_path\").text(path.join(\"/\"));\n        $(id + \"_key\").text(my_key);\n        $(id + \"_again\").trigger(\"click\");\n\n        SD.open_dialog($dlg);\n    };\n\n    SD.search = function() {\n        var $dlg = $(\"#search\");\n\n        SD.init_dialog(\n            $dlg,\n            function ($dlg, id) {\n                $(id + \"_ok\")\n                    .on($.getTapEvent(), function() {\n                        SD.close_dialog($dlg);\n                        S.search($(\"#search_string\").val());\n                    });\n                $(id + \"_string\")\n                    .on(\"change\", function() {\n                        $(\"#search_ok\").trigger($.getTapEvent());\n                    });\n            });\n        SD.open_dialog($dlg);\n    };\n\n    /**\n     * Reminder setting dialog\n     */\n    SD.alarm = function($node) {\n        var $dlg = $(\"#alarm\");\n\n        SD.init_dialog($dlg, function($dlg, id) {\n \n            $dlg.data(\"update_next\", function() {\n                var numb = $(id + \"_number\").val();\n                // Convert to days\n                numb = numb * Utils.TIMEUNITS[$(id + \"_units\").val()].days;\n                var last_time = $dlg.data(\"node\").data(\"last-time\");\n                var alarmd = new Date(last_time + numb * Utils.MSPERDAY);\n                $('#alarm_when').text(alarmd.toLocaleDateString());\n                $(id + \"_next\").text(Utils.deltaTimeString(alarmd));\n            });\n\n            $(id + \"_units\")\n                .on(\"change\", function() {\n                    $dlg.data(\"update_next\").call();\n                });\n\n            $(id + \"_number\")\n                .on(\"change\", function() {\n                    $dlg.data(\"update_next\").call();\n                });\n\n            $(id + \"_set\")\n                .on($.getTapEvent(), function() {\n                    SD.close_dialog($dlg);\n                    var numb = $(id + \"_number\").val()\n                        * Utils.TIMEUNITS[$(id + \"_units\").val()].days;\n                    SD.play_action(\n                        { type: \"A\",\n                          path: ST.get_path($dlg.data(\"node\")),\n                          data: numb\n                        });\n                    return false;\n                });\n\n            $(id + \"_clear\")\n                .on($.getTapEvent(), function() {\n                    SD.play_action(\n                        { type: \"C\",\n                          path: ST.get_path($dlg.data(\"node\"))\n                        });\n                    SD.close_dialog($dlg);\n                    return false;\n                });\n\n        });\n        \n        $(\"#alarm_path\").text(ST.get_path($node).join(\"/\"));\n\n        $dlg.data(\"node\", $node);\n        $dlg.data(\"update_next\").call();\n\n        SD.open_dialog($dlg);\n    };\n\n    /* Helper */\n    SD.ss_change_image = function() {\n        var fail = function(e) {\n            $(\"#store_settings_message\").text(TX.tx(\n                \"Cannot use this image because of this error: $1\", e));\n        };\n        var file = $(this)[0].files[0];\n        Utils.read_file(\n            file,\n            function(data) {\n                data = \"data:\" + file.type + \";base64,\"\n                    + Utils.ArrayBufferToBase64(data);\n                if (data !== $(\"#stegamage\").attr(\"src\", data)) {\n                    $(\"#stegamage\")\n                        .attr(\"src\", data)\n                        .off(\"load\")\n                        .on(\"load\", function() {\n                            $(this).off(\"load\");\n                            // Check that we can use the image.\n                            var steg = new Steganographer(this);\n                            try {\n                                steg.inject(\"tada\");\n                            } catch (e) {\n                                if (DEBUG) console.debug(\"Caught \" + e);\n                                fail(e);\n                                return;\n                            }\n                            $(\"#store_settings #ok\").attr(\"disabled\", false);\n                            var h = this.naturalHeight;\n                            var w = this.naturalWidth;\n                            this.height = 100;\n                            $(\"#store_settings_message\")\n                                .html(\"<br>\" + w + \" x \" + h);\n                            if (S.client.status === S.IS_LOADED)\n                                S.client.status = S.NEW_SETTINGS;\n                            if (S.cloud.status === S.IS_LOADED)\n                                S.cloud.status = S.NEW_SETTINGS;\n                            Utils.sometime(\"update_save\");\n                        });\n                }\n            },\n            fail,\n            \"arraybuffer\");\n    };\n\n    SD.store_settings = function(chain) {\n        var $dlg = $(\"#store_settings\");\n\n        SD.init_dialog($dlg, function($dlg, id) {\n            $(id + \"_file\")\n                .hide()\n                .on($.getTapEvent(), function () {\n                    SD.ss_change_image();\n                });\n\n            $(id + \"_image\")\n                .on($.getTapEvent(), function(e) {\n                    $(\"#store_settings_file\").trigger(\"change\", e);\n                });\n\n            $(id + \"_storepath\").on(\"keyup\", function() {\n                if ($(\"#store_settings_storepath\").val() === \"\") {\n                    $(\"#store_settings_message\").text(TX.tx(\n                        \"Store path may not be empty\"));\n                    return false;\n                }\n                if (S.client.hoard.options.store_path !==\n                    $(\"#store_settings_storepath\").val()) {\n                    S.client.hoard.options.store_path =\n                        $(\"#store_settings_storepath\").val();\n                    if (S.client.status === S.IS_LOADED)\n                        S.client.status = S.NEW_SETTINGS;\n                    // No - the cloud isn't affected by the store path,\n                    // so don't mark it as changed\n                    // if (S.cloud.status === S.IS_LOADED)\n                    //     S.cloud.status = S.NEW_SETTINGS;\n                    Utils.sometime(\"update_save\");\n                }\n                return true;\n            });\n\n            $(id + \"_ok\")\n                .on($.getTapEvent(), function () {\n                    if ($(\"#store_settings_storepath\").val() === \"\") {\n                        $(\"#store_settings_message\").text(TX.tx(\n                            \"Store path may not be empty\"));\n                        return false;\n                    }\n                    SD.close_dialog($dlg);\n                    var cb = $dlg.data(\"callback\");\n                    if (typeof cb === \"function\")\n                        cb();\n                });\n        });\n\n        $(\"#store_settings_message\").empty();\n        $dlg.data(\"callback\", chain);\n        $(\"#store_settings_storepath\").val(\n            S.client.hoard.options.store_path);\n\n        SD.open_dialog($dlg);\n    };\n\n    /**\n     * Master password change dialog\n     */\n    SD.chpw = function() {\n        var $dlg = $(\"#chpw\");\n\n        SD.init_dialog($dlg, function($dlg, id) {\n            $(id + \"_show\")\n                .on(\"change\", function() {\n                    if ($(\"#chpw_show\").prop(\"checked\")) {\n                        $(\"#chpw_pass\").attr(\"type\", \"text\");\n                        $(\"#chpw_conf\").attr(\"type\", \"text\");\n                    } else {\n                        $(\"#chpw_pass\").attr(\"type\", \"password\");\n                        $(\"#chpw_conf\").attr(\"type\", \"password\");\n                    }\n                });\n\n            $dlg.data(\"validate\", function() {\n                var p = $(\"#chpw_pass\").val(),\n                c = $(\"#chpw_conf\").val();\n\n                $(\"#chpw_nomatch\").toggle(p !== c);\n                return (p === c);\n            });\n\n            $(id + \"_conf\").on(\"change\", function() {\n                $dlg.data(\"validate\").call();\n            });\n\n            $(id + \"_set\")\n                .on($.getTapEvent(), function () {\n                    if (!$dlg.data(\"validate\").call())\n                        return false;\n                    SD.close_dialog($dlg);\n                    var p = $(\"#chpw_pass\").val();\n                    S.client.store.pass(p);\n                    S.client.status = S.NEW_SETTINGS;\n                    S.cloud.store.pass(p);\n                    S.cloud.status = S.NEW_SETTINGS;\n                    Utils.sometime(\"update_save\");\n\n                    return true;\n                });\n        });\n\n        $dlg.data(\"validate\").call();\n\n        SD.open_dialog($dlg);\n    };\n\n    SD.json = function() {\n        var $dlg = $(\"#json\");\n\n        SD.init_dialog($dlg, function($dlg, id) {\n            $(id + \"_text\")\n                .on(\"input\", function () {\n                    $(\"#json_ok\").prop(\"disabled\", false);\n                });\n\n            $(id + \"_ok\")\n                .on($.getTapEvent(), function () {\n                    SD.close_dialog($dlg);\n                    var datum;\n                    try {\n                        datum = JSON.parse($(\"#json_text\").val());\n                    } catch (e) {\n                        SD.squeak({\n                            title: TX.tx(\"JSON could not be parsed\"),\n                            severity: \"error\",\n                            message: e\n                        });\n                        return false;\n                    }\n                    $(\"#json_ok\").prop(\"disabled\", true);\n                    if (DEBUG) console.debug(\"Importing...\");\n                    S.insert_data([], datum);\n                    return true;\n                });\n        });\n\n        var data = S.client.hoard.JSON();\n        $(\"#json_text\")\n            .text(data)\n            .select();\n        $(\"#json_ok\").prop(\"disabled\", true);\n\n        SD.open_dialog($dlg);\n    };\n\n    SD.theme = function() {\n        var $dlg = $(\"#theme\");\n\n        SD.init_dialog($dlg, function($dlg, id) {\n            $(id + \"_select\")\n                .on(\"change\", function () {\n                    var theme = $(this).val();\n                    $(\"link\").filter(function() {\n                        return this.href && this.href.indexOf('/themes/') > 0;\n                    }).each(function() {\n                        this.href = this.href.replace(\n                                /\\/themes\\/[^\\/]+/, \"/themes/\" + theme);\n                        $(this).replaceWith($(this));\n                        Utils.sometime(\"reset_styling\");\n                    });\n\n                });\n        });\n\n        SD.open_dialog($dlg);\n    };\n\n    SD.extras = function() {\n        var $dlg = $(\"#extras\");\n\n        SD.init_dialog($dlg, function($dlg, id) {\n            $(id + \"_autosave\")\n                .on(\"change\", function() {\n                    S.client.hoard.options.autosave =\n                        ($(\"#extras_autosave\").val() === \"on\");\n                    Utils.sometime(\"update_save\");\n                });\n\n            $(id + \"_chpw\").on($.getTapEvent(), function() {\n                SD.close_dialog($dlg);\n                SD.chpw();\n            });\n\n            $(id + \"_chss\").on($.getTapEvent(), function() {\n                SD.close_dialog($dlg);\n                SD.store_settings();\n            });\n            $(id + \"_theme\").on($.getTapEvent(), function() {\n                SD.close_dialog($dlg);\n                SD.theme();\n            });\n\n            $(id + \"_json\").on($.getTapEvent(), function() {\n                SD.close_dialog($dlg);\n                SD.json();\n            });\n\n            $(id + \"_about\").on($.getTapEvent(), function() {\n                SD.close_dialog($dlg);\n                SD.about();\n            });\n        });\n\n        if (!(S.USE_STEGANOGRAPHY\n              || S.cloud.store\n              && S.cloud.store.options().needs_path)) {\n            $(\"#extras_chss\").hide();\n        }\n\n        $(\"#extras_autosave\").val(\n            S.client.hoard.options.autosave ? \"on\" : \"off\");\n\n        SD.open_dialog($dlg);\n    };\n\n    function validate_unique($node, $input) {\n        // Disable OK if key value exists or is invalid\n        var $ul = $node.find(\"ul:first\");\n        var enabled = true;\n        var val = $input.val();\n\n        if (!/\\S/.test(val)) // empty?\n            enabled = false;\n        else {\n            $ul.children(\".tree-node\").each(function() {\n                if (ST.compare($(this).data(\"key\"), val) == 0) {\n                    enabled = false;\n                    return false;\n                }\n            });\n        }\n            \n        if (enabled) {\n            $(id + \"_ok\").button(\"enable\");\n            $(id + \"_key\")\n                .removeClass(\"dlg-disabled\")\n                .attr(\"title\", TX.tx(\"Enter new name\"));\n        } else {\n            $(id + \"_ok\").button(\"disable\");\n            $(id + \"_key\")\n                .addClass(\"dlg-disabled\")\n                .attr(\"title\", TX.tx(\"Name is already in use\"));\n        }\n    };\n    \n    SD.insert = function($parent, data) {\n        var id = \"#insert\";\n        var $dlg = $(id);\n\n        SD.init_dialog($dlg, function($dlg, id) {\n            $(id + \"_key\")\n                .on(\"input\", function() {\n                    validate_unique($dlg.data(\"parent\"), $(this));\n                });\n            $(id + \"_ok\")\n                .button()\n                .on($.getTapEvent(), function() {\n                    $dlg.dialog(\"close\");\n                    S.add_child_node($dlg.data(\"parent\"), $(id + \"_key\").val(), data.data);\n                });\n        });\n\n        if (DEBUG) console.debug(\"Pasting\");\n        $dlg.data(\"parent\", $parent);\n        var base = TX.tx(\"A copy\");\n        var name = new RegExp(\"^\" + base + \" ?(\\\\d*)$\");\n        var i = -1;\n        $parent.find(\"ul:first\").children(\".tree-node\").each(function() {\n            var m = name.exec($(this).data(\"key\"));\n            if (m)\n                i = Math.max(i, m[1] ? parseInt(m[1]) : 0);\n        });\n        $(id + \"_key\").val(base + (i >= 0 ? (\" \" + (i + 1)) : \"\"));\n        \n        SD.open_dialog($dlg);\n    };\n    \n    SD.add = function($parent, is_value) {\n        var id = \"#add\"\n        var $dlg = $(id);\n\n        $dlg.data(\"parent\", $parent);\n        $dlg.data(\"adding_value\", is_value);\n        var $ul = $parent.find(\"ul:first\");\n\n        SD.init_dialog($dlg, function($dlg, id) {\n            $(id + \"_key\")\n                .on(\"input\", function() { validate_unique($parent, $(this)); })\n                .autocomplete({ source: [\n                    TX.tx(\"User\"), TX.tx(\"Pass\") ]});\n\n            $(id + \"_ok\")\n                .button()\n                .on($.getTapEvent(), function() {\n                    $dlg.dialog(\"close\");\n                    var $parent = $dlg.data(\"parent\");\n                    S.add_child_node(\n                        $parent, $(id + \"_key\").val(),\n                        $dlg.data(\"adding_value\") ?\n                            $(id + \"_value\").val() : undefined);\n                    return false;\n                });\n        });\n\n        $(id + \"_path\").text(ST.get_path($parent).join(\" > \") + \" > \");\n        if (is_value) {\n            $dlg.attr(\"title\", TX.tx(\"Add value\"));\n            $(id + \"_help\").text(TX.tx(\n                \"Enter the name and value for the new entry\"));\n            $(id + \"_value_parts\").show();\n            $(id + \"_key\").autocomplete(\"enable\");\n        } else {\n            $dlg.attr(\"title\", TX.tx(\"Add folder\"));\n            $(id + \"_help\").text(TX.tx(\n                \"Enter the name for the new folder\"));\n            $(id + \"_value_parts\").hide();\n            $(id + \"_key\").autocomplete(\"disable\");\n        }\n\n        validate_unique($parent, $(id + \"_key\"));\n\n        SD.open_dialog($dlg);\n    };\n    \n    SD.init_dialog = function($dlg, extra) {\n        if ($dlg.hasClass(\"dlg-initialised\"))\n            return;\n        $dlg.addClass(\"dlg-initialised\");\n        var id = \"#\" + $dlg.attr(\"id\");\n        $(id + \"_cancel\")\n            .button()\n            .on($.getTapEvent(), function() {\n                $dlg.dialog(\"close\");\n                return false;\n            });\n        if (extra)\n            extra($dlg, id);\n    };\n\n    SD.open_dialog = function($dlg, opts) {\n        var options = {\n            modal: true,\n            width: \"auto\",\n            closeOnEscape: false\n        };\n        if ($.isTouchCapable()) {\n            options.position = {\n                my: \"left top\",\n                at: \"left top\",\n                of: $(\"body\")\n            }\n        }\n        if (opts)\n            $.extend(options, opts);\n        \n        $dlg.dialog(options);\n    };\n\n    SD.close_dialog = function($dlg) {\n        $dlg.dialog(\"close\");\n    };\n\n    /**\n     * Generate a modal alert dialog\n     * @param p either a string message, or a structure containing:\n     *  title - dialog title\n     *  message - (string or $object or elem)\n     *  severity - may be one of notice (default), warning, error\n     *  after_close - callback on dialog closed\n     */\n    SD.squeak = function(p) {\n        var $dlg = $(\"#squeak\");\n        if (typeof p === \"string\")\n            p = { message: p, severity: \"notice\" };\n\n        $dlg.data(\"after_close\", p.after_close);\n\n        var called_back = false;\n        SD.init_dialog($dlg, function($dlg, id) {\n            $(id + \"_close\")\n                .button()\n                .on($.getTapEvent(), function() {\n                    var ac = $dlg.data(\"after_close\");\n                    $dlg.removeData(\"after_close\");\n                    $dlg.dialog(\"close\");\n                    if (typeof ac === \"function\")\n                        ac();\n                    return false;\n                });\n        });\n\n        $(\"#squeak_message\").empty();\n        SD.squeak_more(p);\n\n        var options = {\n            close: function() {\n                if (!called_back) {\n                    if (typeof p.after_close === \"function\")\n                        p.after_close();\n                }\n            }\n        };\n        if (p.title)\n            options.title = p.title;\n        \n        SD.open_dialog($dlg, options);\n    };\n})(jQuery, Squirrel);\n"]}