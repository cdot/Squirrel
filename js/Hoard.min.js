/*@preserve Copyright (C) 2015 Crawford Currie http://c-dot.co.uk license MIT*/
function Hoard(data){"use strict";data?(this.last_sync=data.last_sync,this.actions=data.actions,this.cache=data.cache,this.options=data.options):(this.last_sync=null,this.clear_actions(),this.cache=null),void 0===this.options&&(this.options={autosave:!1,store_path:null})}Hoard.stringify_action=function(action){"use strict";return action.type+":"+action.path.join("/")+(void 0!==action.data?" '"+action.data+"'":"")+" @"+new Date(action.time).toLocaleString()},Hoard.prototype.clear_actions=function(){"use strict";this.actions=[]},Hoard.prototype.record_action=function(e,listener,no_push){"use strict";function locateParent(path,node){for(i=0;i<path.length-1;i++){var name=path[i];if(node&&"string"==typeof node.data)DEBUG;else{if(!node||!node.data[name])return;node=node.data[name]}}return node}var node,name,i,c;void 0!==e.time&&null!==e.time||(e.time=Date.now()),no_push||this.actions.push({type:e.type,path:e.path.slice(),time:e.time,data:e.data}),c=function(mess){return{conflict:e,message:mess}};var parent=locateParent(e.path,this.cache);if(!parent){if(this.cache)return c("'"+e.path.join("/")+"' "+TX.tx("parent not found"));parent=this.cache={data:{}}}var name=e.path[e.path.length-1],node=parent.data[name];switch(e.type){case"N":if(node)return c(TX.tx("Cannot create, '$1' already exists",e.path.join("/")));parent.time=e.time,parent.data[name]={time:e.time,data:"string"==typeof e.data?e.data:{}};break;case"M":if(!node)return c(TX.tx("Cannot move, '$1' does not exist",e.path.join("/")));if(e.data.length>0){var new_parent,npp=locateParent(e.data,this.cache);npp&&(new_parent=npp.data[e.data[e.data.length-1]])}else new_parent=this.cache;if(!new_parent)return c("Cannot move, '"+e.data.join("/")+"' "+TX.tx("does not exist"));new_parent.time=parent.time=e.time,delete parent.data[name],new_parent.data[name]=node;break;case"D":if(!node)return c(TX.tx("Cannot delete, '$1' does not exist",e.path.join("/")));delete parent.data[name],parent.time=e.time;break;case"R":if(!parent.data[name])return c(TX.tx("Cannot rename, '$1' does not exist",e.path.join("/")));if(parent.data[e.data])return c(TX.tx("Cannot rename '$1', '$2' already exists",e.path.join("/"),e.data));parent.data[e.data]=parent.data[name],delete parent.data[name],parent.time=e.time;break;case"E":if(!parent.data[name])return c(TX.tx("Cannot change value, '$1' does not exist",e.path.join("/")));parent.data[name].data=e.data,parent.data[name].time=e.time;break;case"A":if(!parent.data[name])return c(TX.tx("Cannot set reminder, '$1' does not exist",e.path.join("/")));parent.data[name].alarm=e.data;break;case"C":if(!parent.data[name])return c(TX.tx("Cannot cancel reminder, '$1' does not exist",e.path.join("/")));delete parent.data[name].alarm;break;default:DEBUG}return listener&&listener.call(this,e),null},Hoard.prototype.simplify=function(chain){"use strict";if(this.cache=null,this.actions)for(var i=0;i<this.actions.length;i++){this.record_action(this.actions[i],!1,!0);DEBUG}this.actions=[],this.cache?(this._reconstruct_actions(this.cache.data,[],function(e){this.actions.push({type:e.type,time:e.time,data:e.data,path:e.path.slice()})},chain),this.cache=null):chain&&chain()},Hoard.prototype._reconstruct_actions=function(data,path,listener,chain){"use strict";var self=this,queue=[],handle_node=function(node,p,ready){if(0===p.length)return void ready();var time=void 0!==node.time?node.time:Date.now(),action={type:"N",path:p,time:time};"string"==typeof node.data?action.data=node.data:DEBUG&&node.data;var pal=p.slice();listener.call(self,action,function(){node.alarm&&listener.call(self,{type:"A",path:pal,time:time,data:node.alarm}),ready()})},list_nodes=function(q,node,pat){var key,p;if(q.push(function(ready){handle_node(node,pat,ready)}),"object"==typeof node.data)for(key in node.data)p=pat.slice(),p.push(key),list_nodes(q,node.data[key],p)};list_nodes(queue,data,path.slice()),queue.push(chain),Utils.execute_queue(queue)},Hoard.prototype.actions_from_hierarchy=function(data,listener,chain){"use strict";this._reconstruct_actions(data,[],listener,chain)},Hoard.prototype.reconstruct_actions=function(listener,chain){"use strict";this.cache?this.actions_from_hierarchy(this.cache,listener,chain):chain()},Hoard.prototype.merge_from_cloud=function(cloud,listener,chain){"use strict";var i,c,local_actions=this.actions,conflicts=[];for(this.actions=[],i=0;i<cloud.actions.length;i++)cloud.actions[i].time>this.last_sync?(DEBUG&&console.debug("Merge "+Hoard.stringify_action(cloud.actions[i])),null!==(c=this.record_action(cloud.actions[i],listener,!0))&&(DEBUG&&console.debug("Conflict: "+c.message),conflicts.push(c))):DEBUG&&console.debug("Skip "+Hoard.stringify_action(cloud.actions[i]));this.actions=local_actions,this.last_sync=Date.now(),chain&&chain(conflicts)},Hoard.prototype.dump=function(){"use strict";for(var data=this.JSON()+"\n",i=0;i<this.actions.length;i++)data=data+Hoard.stringify_action(this.actions[i])+"\n";return data},Hoard.prototype.get_node=function(path){"use strict";var i,node=this.cache;for(i=0;i<path.length;i++){if("string"==typeof node.data)return null;node=node.data[path[i]]}return node},Hoard.prototype.each_alarm=function(){"use strict";for(var self=this,alarum=function(){self.each_alarm()};this.check&&this.check.queue.length>0;){var name,item=this.check.queue.pop(),node=item.node;if("object"==typeof node.data)for(name in node.data){var snode=node.data[name];this.check.queue.push({node:snode,path:item.path.slice().concat([name])})}if(void 0!==node.alarm&&Date.now()-node.time>=node.alarm*Utils.MSPERDAY)return void this.check.alarm(item.path,new Date(node.time+node.alarm*Utils.MSPERDAY),alarum)}delete this.check},Hoard.prototype.check_alarms=function(callback){"use strict";this.cache&&(this.check={queue:[{path:[],node:this.cache}],alarm:callback},this.each_alarm())},Hoard.prototype.JSON=function(){"use strict";var data="";return this.cache&&(data=JSON.stringify(this.cache.data,null,"\t")),data};
//# sourceMappingURL=Hoard.map