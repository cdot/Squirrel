{"version":3,"sources":["js/Utils.js"],"names":["DEBUG","Utils","waiting_for_sometime","sometime_timeout","last_yield","Date","now","IMMEDIATE","SOON","SOMETIME","MSPERDAY","TIMEUNITS","y","days","ms","format","m","d","setUpAjax","options","originalOptions","jqXHR","window","FormData","dataType","data","ArrayBuffer","Blob","send","headers","callback","xhr","XMLHttpRequest","url","type","async","responseType","username","password","addEventListener","data2","response","status","statusText","getAllResponseHeaders","open","i","setRequestHeader","abort","jQuery","ajaxTransport","generate_password","constraints","sor","eor","length","charset","cs","legal","charAt","charCodeAt","substring","push","String","fromCharCode","array","Uint8Array","crypto","getRandomValues","s","getURLParameters","params","bits","location","search","split","pairs","pair","decodeURIComponent","replace","kv","fragmentify","fid","sometime","event","setTimeout","sometime_is_now","$","document","triggerHandler","soon","fn","execute_queue","q","q_ready","q_next","qready","shift","load","libs","uncompressed","on_loaded","expect","_loaded","file","Object","keys","test","getScript","done","fail","appendTo","attr","rel","get","read_file","ok","mode","reader","FileReader","onload","result","onerror","name","onabort","readAsText","readAsArrayBuffer","readAsBinaryString","readAsDataURL","ArrayBufferToString","ab","byteLength","a16","Uint16Array","str","StringToArrayBuffer","strLen","buffer","ArrayBufferToPackedString","a8","cc","high","ps","a8_len","PackedStringToArrayBuffer","datalen","j","ArrayBufferToBase64","nMod3","sB64Enc","nLen","uint6ToB64","nUInt6","nUInt24","nIdx","substr","Base64ToArrayBuffer","sB64","nMod4","nInLen","nOutLen","ta8","nOutIdx","nInIdx","nChr","query_string","query","vars","ass","arr","make_query_string","qs","sep","k","encodeURIComponent","deltaTimeString","date","getTime","delta","getUTCFullYear","TX","tx","setUTCFullYear","getUTCMonth","setUTCMonth","getUTCDate","join","module","exports"],"mappings":"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","file":"js/Utils.min.js","sourcesContent":["/*@preserve Copyright (C) 2015-2017 Crawford Currie http://c-dot.co.uk license MIT*/\n\n/* global TX */\n/* global ArrayBuffer */\n/* global Uint8Array */\n/* global Uint16Array */\n/* global module */\n\n/**\n * Utilities and plugins used by Squirrel\n */\nvar DEBUG = false; // Override in URI params\n\nvar Utils = { // Namespace\n    // Hash of events that are waiting to be triggered by the 'sometime'\n    // scheduler.\n    waiting_for_sometime: {},\n\n    // By setting the sometime_timeout to a non-null value we block\n    // the wait queue until Utils.sometime_is_now is called the first time.\n    // This lets us complete the load without too much noise.\n    sometime_timeout: true,\n\n    // Set by the 'sometime' scheduler, the 'soon' scheduler, and\n    // the 'execute_queue' sequencer to record when the last time we\n    // had a timeout event, indicating that the UI has had a timeslice.\n    // Used by 'soon' to control how often we yield to the UI before\n    // calling the managed function (we don't want to yield unless we\n    // really have to)\n\n    last_yield: Date.now(),\n\n    // Timeout intervals, milliseconds\n    IMMEDIATE: 1,\n    SOON: 100,\n    SOMETIME: 250,\n    MSPERDAY: 24 * 60 * 60 * 1000,\n    TIMEUNITS: {\n        y: {\n            days: 360,\n            ms: 364 * 24 * 60 * 60 * 1000,\n            // TX $1 year$?($1!=1,s,)\n            format: \"$1 year$?($1!=1,s,)\"\n        },\n        m: {\n            days: 30,\n            ms: 30 * 24 * 60 * 60 * 1000,\n            // TX $1 month$?($1!=1,s,)\n            format: \"$1 month$?($1!=1,s,)\"\n        },\n        d: {\n            days: 1,\n            ms: 24 * 60 * 60 * 1000,\n            // TX $1 day$?($1!=1,s,)\n            format: \"$1 day$?($1!=1,s,)\"\n        }\n    }\n};\n\n/**\n * Needed to be able to read binary files.\n * http://www.henryalgus.com/reading-binary-files-using-jquery-ajax/\n*/\nUtils.setUpAjax = function(options, originalOptions, jqXHR){\n    \"use strict\";\n\n    // check for conditions and support for blob / arraybuffer response type\n    if (window.FormData\n        && ((options.dataType && (options.dataType === \"binary\"))\n            || (options.data\n                && ((window.ArrayBuffer && options.data instanceof ArrayBuffer)\n                    || (window.Blob && options.data instanceof Blob)))))\n    {\n        return {\n            // create new XMLHttpRequest\n            send: function(headers, callback){\n\t\t// setup all variables\n                var xhr = new XMLHttpRequest(),\n\t\turl = options.url,\n\t\ttype = options.type,\n\t\tasync = options.async || true,\n\t\t// blob or arraybuffer. Default is blob\n\t\tdataType = options.responseType || \"blob\",\n\t\tdata = options.data || null,\n\t\tusername = options.username || null,\n\t\tpassword = options.password || null;\n\t\t\t\t\t\n                xhr.addEventListener(\"load\", function(){\n\t\t\tvar data2 = {};\n\t\t\tdata2[options.dataType] = xhr.response;\n\t\t\t// make callback and send data\n\t\t\tcallback(xhr.status, xhr.statusText,\n                                 data2, xhr.getAllResponseHeaders());\n                });\n \n                xhr.open(type, url, async, username, password);\n\t\t\t\t\n\t\t// setup custom headers\n\t\tfor (var i in headers ) {\n\t\t\txhr.setRequestHeader(i, headers[i] );\n\t\t}\n\t\t\t\t\n                xhr.responseType = dataType;\n                xhr.send(data);\n            },\n            abort: function(){\n                jqXHR.abort();\n            }\n        };\n    }\n}\n\nif (typeof jQuery !== \"undefined\")\n    jQuery.ajaxTransport(\"+binary\", Utils.setUpAjax);\n    \n/**\n * Generate a new password subject to constraints:\n * length: length of password\n * charset: characters legal in the password. Ranges can be defined using\n * A-Z syntax.\n */\nUtils.generate_password = function(constraints) {\n    \"use strict\";\n\n    var sor, eor;\n\n    if (typeof constraints.length === \"undefined\")\n        constraints.length = 24;\n\n    if (typeof constraints.charset === \"undefined\")\n        constraints.charset = \"A-Za-z0-9\";\n\n    var cs = constraints.charset;\n    var legal = [];\n    while (cs.length > 0) {\n        if (cs.length >= 3 && cs.charAt(1) === \"-\") {\n            sor = cs.charCodeAt(0);\n            eor = cs.charCodeAt(2);\n            cs = cs.substring(3);\n            while (sor <= eor) {\n                legal.push(String.fromCharCode(sor++));\n            }\n        } else {\n            legal.push(cs.charAt(0));\n            cs = cs.substring(1);\n        }\n    }\n    var array = new Uint8Array(constraints.length);\n    window.crypto.getRandomValues(array);\n    var s = \"\";\n    for (var i = 0; i < constraints.length; i++) {\n        s += legal[array[i] % legal.length];\n    }\n    return s;\n};\n\n/**\n * Escape meta-characters for use in CSS selectors\nUtils.escape_selector = function(s) {\n    \"use strict\";\n\n    return s.replace(/([\\][!\"#$%&'()*+,.\\/:;<=>?@\\\\^`{|}~])/g, \"\\\\$1\");\n};\n*/\n\n/**\n * Get the URL parameters\n * @return a hash mapping parameter name to decoded value\n */\nUtils.getURLParameters = function() {\n    \"use strict\";\n\n    var params = {};\n    var bits = location.search.split(\"?\", 2);\n    if (bits.length < 2)\n        return params;\n    var pairs = bits[1].split(/[&;]/);\n    for (var i = 0; i < pairs.length; i++) {\n        var pair = decodeURIComponent(pairs[i].replace(/\\+/g, \"%20\"));\n        var kv = pair.split(\"=\", 2);\n        params[kv[0]] = (kv[1] || null);\n    }\n};\n\n/**\n * Convert an arbitrary string to a legal HTTP fragment name\n */\nUtils.fragmentify = function(fid) {\n    \"use strict\";\n\n    return fid.replace(/[^A-Za-z0-9:]/g, function(m) {\n        return \"_\" + m.charCodeAt(0);\n    });\n};\n\n/**\n * Simple asynchronous event mechanism to prevent duplicate events.\n * This intended for events that will update the UI, but don't want\n * to be called every time due to the load they impose. Events are always\n * sent using the $(document).triggerHandler()\n * Events queued using sometime will not be fired until the first\n * call to sometime_is_now, and after that at most every 250ms.\n * @param {string} event name\n * @param {Object} target optional target for the event. If not set, the\n * event will be sent to $(document)\n */\nUtils.sometime = function(event) {\n    \"use strict\";\n\n    //console.debug(\"...queue sometime \" + event);\n    if (Utils.waiting_for_sometime[event]) {\n        //console.debug(\"......already waiting\");\n        return;\n    }\n\n    Utils.waiting_for_sometime[event] = true;\n    if (Utils.sometime_timeout === null) {\n        //console.debug(\"......set timeout\");\n        Utils.sometime_timeout = window.setTimeout(\n            Utils.sometime_is_now, Utils.SOMETIME);\n    }\n};\n\n/**\n * Execute the events that have been waiting for 'sometime'\n */\nUtils.sometime_is_now = function() {\n    \"use strict\";\n\n    Utils.sometime_timeout = null;\n    Utils.last_yield = Date.now();\n    for (var event in Utils.waiting_for_sometime) {\n        // Triggering these handlers may take an appreciable amount of\n        // time and result in new events joining the sometime schedule.\n        //console.debug(\"...sometime for \" + event + \" is now\");\n        $(document).triggerHandler(event);\n        // Only now delete the event to allow it to be requeued\n        delete Utils.waiting_for_sometime[event];\n    }\n};\n\n/**\n * Allow the UI to have a slice of time before we call the given function,\n * but only if it's been a perceptible amount of time (>100ms) since the\n * last UI update. This is used when chaining sequences of function calls.\n * Note that it is potentially recursive - if you have a rapid sequence\n * of actions to handle, don't use soon to sequence them or you might blow\n * the stack. Use execute_queue instead, which is non-recursive.\n * @param fn function to call\n */\nUtils.soon = function(fn) {\n    \"use strict\";\n\n    // If it's been a decent amount of time since the last time\n    // we yielded to the UI, then set an asynchronous timeout before\n    // we activate the next function in the chain. This will allow\n    // the UI a timeslice.\n    if (Date.now() - Utils.last_yield > Utils.SOON) {\n        window.setTimeout(function() {\n            Utils.last_yield = Date.now();\n            //console.debug(\"soon is now\");\n            fn();\n        }, Utils.IMMEDIATE);\n    } else {\n        //console.debug(\"soon is immediate\");\n        fn();\n    }\n};\n\n/**\n * Execute each function in the queue, and continue until empty.\n * Execution will not continue until the function being executed has\n * called ready()\". The last function in the queue doesn't need to call\n * ready(), as the queue will then be empty.\n */\nUtils.execute_queue = function(q) {\n    \"use strict\";\n\n    Utils.q_ready();\n    Utils.q_next(q);\n};\n\nUtils.q_ready = function() {\n    \"use strict\";\n\n    Utils.qready = true;\n};\n\nUtils.q_next = function(q) {\n    \"use strict\";\n\n    if (q.length > 0 && Utils.qready) {\n        var fn = q.shift();\n        Utils.qready = false;\n        fn(Utils.q_ready);\n    }\n\n    // Maintain UI performance\n    window.setTimeout(function() {\n        Utils.last_yield = Date.now();\n        Utils.q_next(q);\n    }, Utils.IMMEDIATE);\n};\n\n/**\n * Simple dynamic loader. Won't work with file:// URLs or cross-origin.\n * Load a list of resources - .js, .css or .html. JS gets loaded and\n * executes, CSS gets loaded using <link>, HTML gets loaded and appended\n * to the document body.\n * @param libs list of resources\n * @param uncompressed true to load uncompressed libs, otherwise use min\n * @param on_loaded is called when all libs have been loaded\n */\nUtils.load = function(libs, uncompressed, on_loaded) {\n    \"use strict\";\n\n    var expect = {};\n\n    // action when a resource is loaded\n    var _loaded = function(file) {\n        //console.debug(\"Loaded \" + file);\n        delete expect[file];\n        if (Object.keys(expect).length === 0) {\n            if (typeof on_loaded === \"function\") {\n                //console.debug(\"Calling on_loaded\");\n                on_loaded();\n            }\n        }\n        //else console.debug(\"Still waiting for \" + Object.keys(expect));\n    };\n\n    // fire off a resource load\n    var _add_load = function(file) {\n        if (uncompressed)\n            file = file.replace(\".min.\", \".\");\n\n        //console.debug(\"Loading \" + file);\n        expect[file] = true;\n        if (/\\.js$/.test(file)) {\n            $.getScript(file)\n                .done(function() {\n                    //console.debug(\"Loaded script \" + file);\n                    _loaded(file);\n                })\n                .fail(function() {\n                    debugger;\n                });\n        } else if (/\\.css$/.test(file)) {\n            $(\"link\")\n                .appendTo(\"head\")\n                .attr({ type: \"text/css\", rel: \"stylesheet\" })\n                .attr(\"href\", file);\n            _loaded(file);\n        } else if (/\\.html$/.test(file)) {\n            $.get(file)\n                .done(function(data) {\n                    //console.debug(\"Loaded HTML \" + file);\n                    $(data)\n                        .appendTo(\"body\");\n                    _loaded(file);\n                })\n                .fail(function() {\n                    debugger;\n                });\n        }\n    };\n\n    for (var i = 0; i < libs.length; i++) {\n        _add_load(libs[i]);\n    }\n};\n\n/**\n * Read a file from disc\n * @param file File object to read\n * @param ok callback when file is read, passed an ArrayBuffer\n * containing the file contents\n * @param fail callback on failure\n * @param mode optional read mode, one of \"arraybuffer\", \"binarystring\",\n * \"datauri\" or \"text\". The default is \"text\".\n */\nUtils.read_file = function(file, ok, fail, mode) {\n    \"use strict\";\n\n    //var store = this;\n    var reader = new FileReader();\n    reader.onload = function(/*evt*/) {\n        ok(reader.result);\n    };\n    reader.onerror = function() {\n\tfail(file.name + \" read failed\");\n    };\n    reader.onabort = reader.onerror;\n    if (typeof mode === \"undefined\" || mode === \"text\")\n        reader.readAsText(file);\n    else if (mode === \"arraybuffer\")\n        reader.readAsArrayBuffer(file);\n    else if (mode === \"binarystring\")\n        reader.readAsBinaryString(file);\n    else if (mode === \"datauri\")\n        reader.readAsDataURL(file);\n    else\n        throw \"Unrecognised mode \" + mode;\n};\n\n/**\n * Convert an ArrayBuffer containing 16-bit character codes into a\n * String.\n * @param data ArrayBuffer which must be an even number of bytes long\n * @return String the string the ArrayBuffer contains\n */\nUtils.ArrayBufferToString = function(ab) {\n    \"use strict\";\n\n    if (DEBUG && ab.byteLength % 2 !== 0)\n        debugger;\n    var a16 = new Uint16Array(ab);\n    var str = \"\";\n    for (var i = 0; i < a16.length; i++)\n        str += String.fromCharCode(a16[i]);\n    return str;\n};\n\n/**\n * Convert a String into an ArrayBuffer containing 16 bit character\n * codes.\n * @param str the String to convert\n * @return an ArrayBuffer (which will be an even number of bytes long)\n */\nUtils.StringToArrayBuffer = function(str) {\n    \"use strict\";\n\n    var a16 = new Uint16Array(str.length);\n    for (var i = 0, strLen = str.length; i < strLen; i++)\n        a16[i] = str.charCodeAt(i);\n    return a16.buffer;\n};\n\n/**\n * Pack arbitrary binary byte data into a String as efficiently\n * as possible.\n * @param data arbitrary byte data to be packed\n * @return a String containing the packed data\n */\nUtils.ArrayBufferToPackedString = function(ab) {\n    \"use strict\";\n\n    var a8 = new Uint8Array(ab);\n    // Pack 8-bit data into strings using the high and low bytes for\n    // successive data. The usb of the first character is reserved\n    // for a flag that indicates if the least significant byte of\n    // the last character is part of the string or not.\n    var cc = ((a8.length & 1) !== 0) ? 0x100 : 0;\n    // a8.length == 0, string length = 1, usb = 0\n    // a8.length == 1, string length = 1, usb = 1\n    // a8.length == 2, string length = 2, usb = 0\n    // a8.length == 3, string length = 2, usb = 1\n    // a8.length == 4, string length = 3, usb = 0 etc.\n    var high = true; // have we just packed the high byte?\n    var ps = \"\";\n    var a8_len = a8.length;\n    for (var i = 0; i < a8_len; i++) {\n        if (high) {\n            ps += String.fromCharCode(cc | a8[i]);\n            high = false;\n        } else {\n            cc = a8[i] << 8;\n            high = true;\n        }\n    }\n    // Strings are 16-bit data, so the LSB of the last character may have to\n    // be left as 0\n    if (high)\n        ps += String.fromCharCode(cc);\n    return ps;\n};\n\n/**\n * Convert a packed string, created using ArrayBufferToPackedString, back\n * into an ArrayBuffer containing an arbitrary number of bytes.\n */\nUtils.PackedStringToArrayBuffer = function(str) {\n    \"use strict\";\n\n    var datalen = 2 * str.length - 1;\n    if ((str.charCodeAt(0) & 0x100) === 0)\n        datalen--;\n    var high = true;\n    var a8 = new Uint8Array(datalen);\n    var i = 0;\n    var j = 0;\n    while (j < datalen) {\n        if (high) {\n            a8[j++] |= str.charCodeAt(i++) & 0xFF;\n            high = false;\n        } else {\n            a8[j++] = (str.charCodeAt(i) >> 8) & 0xFF;\n            high = true;\n        }\n    }\n    return a8.buffer;\n};\n\n/**\n * Convert an ArrayBuffer containing arbitrary byte data into a Base64\n * encoded string, suitable for use in a Data-URI\n * @param ab the ArrayBuffer to convert\n * @return a String of Base64 bytes (using MIME encoding)\n */\nUtils.ArrayBufferToBase64 = function(ab) {\n    \"use strict\";\n\n    var a8 = new Uint8Array(ab);\n    var nMod3 = 2;\n    var sB64Enc = \"\";\n    var nLen = a8.length;\n\n    // Convert a base 64 number to the charcode of the character used to\n    // represent it\n    var uint6ToB64 = function(nUInt6) {\n        return nUInt6 < 26 ?\n            nUInt6 + 65\n            : nUInt6 < 52 ?\n            nUInt6 + 71\n            : nUInt6 < 62 ?\n            nUInt6 - 4\n            : nUInt6 === 62 ?\n            43\n            : nUInt6 === 63 ?\n            47\n            :\n            65;\n    };\n\n    // For each byte in the buffer\n    for (var nUInt24 = 0, nIdx = 0; nIdx < nLen; nIdx++) {\n        nMod3 = nIdx % 3;\n        nUInt24 |= a8[nIdx] << (16 >>> nMod3 & 24);\n        if (nMod3 === 2 || nLen - nIdx === 1) {\n            sB64Enc += String.fromCharCode(\n                uint6ToB64(nUInt24 >>> 18 & 63),\n                uint6ToB64(nUInt24 >>> 12 & 63),\n                uint6ToB64(nUInt24 >>> 6 & 63),\n                uint6ToB64(nUInt24 & 63));\n            nUInt24 = 0;\n        }\n    }\n\n    return sB64Enc.substr(0, sB64Enc.length - 2 + nMod3)\n        + (nMod3 === 2 ? \"\" : nMod3 === 1 ? \"=\" : \"==\");\n};\n\n/**\n * Convert a MIME-Base64 string into an array buffer of arbitrary\n * 8-bit data\n * @param sB64Enc the String to convert\n * @return an ArrayBuffer\n */\nUtils.Base64ToArrayBuffer = function(sB64) {\n    \"use strict\";\n\n    var sB64Enc = sB64.replace(/[^A-Za-z0-9\\+\\/]/g, \"\"); // == and =\n    var nInLen = sB64Enc.length;\n    var nOutLen = nInLen * 3 + 1 >> 2;\n    var ta8 = new Uint8Array(nOutLen);\n    // Convert Base64 char (as char code) to the number represented\n    var b64ToUInt6 = function(nChr) {\n        return nChr > 64 && nChr < 91 ?\n            nChr - 65\n            : nChr > 96 && nChr < 123 ?\n            nChr - 71\n            : nChr > 47 && nChr < 58 ?\n            nChr + 4\n            : nChr === 43 ?\n            62\n            : nChr === 47 ?\n            63\n            :\n            0;\n    };\n\n    for (var nMod3, nMod4, nUInt24 = 0, nOutIdx = 0, nInIdx = 0;\n         nInIdx < nInLen; nInIdx++) {\n        nMod4 = nInIdx & 3;\n        nUInt24 |= b64ToUInt6(sB64Enc.charCodeAt(nInIdx))\n            << 6 * (3 - nMod4);\n        if (nMod4 === 3 || nInLen - nInIdx === 1) {\n            for (nMod3 = 0; nMod3 < 3\n                 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {\n                ta8[nOutIdx] = nUInt24 >>> (16 >>> nMod3 & 24) & 255;\n            }\n            nUInt24 = 0;\n        }\n    }\n    return ta8.buffer;\n};\n\n/**\n * Parse the query string, and return a map of key=>value\n */\nUtils.query_string = function () {\n    \"use strict\";\n    var query = {};\n    var vars = window.location.search.substring(1).split(/[&;]+/);\n    for (var i = 0; i < vars.length; i++) {\n        if (vars[i] === \"\")\n            continue;\n        var ass = vars[i].split(\"=\");\n        if (typeof query[ass[0]] === \"undefined\") {\n            // If first entry with this name, assign simple string\n            query[ass[0]] = decodeURIComponent(ass[1]);\n        } else if (typeof query[ass[0]] === \"string\") {\n            // If second entry with this name, make an array\n            var arr = [ query[ass[0]], decodeURIComponent(ass[1]) ];\n            query[ass[0]] = arr;\n        } else {\n            // If third or later entry with this name, push it\n            query[ass[0]].push(decodeURIComponent(ass[1]));\n        }\n    } \n    return query;\n};\n\nUtils.make_query_string = function(qs) {\n    \"use strict\";\n    var params = \"\";\n    var sep = \"?\";\n    for (var k in qs) {\n        params += sep + encodeURIComponent(k)\n            + \"=\" + encodeURIComponent(qs[k]);\n        sep = \"&\";\n    }\n    return params;\n};\n\n/**\n * Given a time value, return a breakdown of the period between now\n * and that time. For example, \"1 years 6 months 4 days\". Resolution is\n * days. Any time less than a day will be reported as 0 days.\n * @param time either a Date object specifying an absolute time or\n * a number of ms until the time/\n * @return array of structures each containing `id` (one of `d`, `w`, `m`, `y`),\n * `number` of those, and `name` translated pluralised name e.g. `months`\n */\nUtils.deltaTimeString = function(date) {\n    \"use strict\";\n\n    date = new Date(date.getTime() - Date.now());\n\n    var s = [];\n\n    var delta = date.getUTCFullYear() - 1970;\n    if (delta > 0)\n        s.push(TX.tx(Utils.TIMEUNITS.y.format, delta));\n\n    // Normalise to year zero\n    date.setUTCFullYear(1970);\n\n    delta = date.getUTCMonth();\n    if (delta > 0)\n        s.push(TX.tx(Utils.TIMEUNITS.m.format, delta));\n\n    // Normalise to the same month (January)\n    date.setUTCMonth(0);\n\n    delta = date.getUTCDate();\n    if (delta > 0 || s.length === 0)\n        s.push(TX.tx(Utils.TIMEUNITS.d.format, delta));\n\n    return s.join(\" \");\n};\n\nif (typeof module !== \"undefined\")\n    module.exports = Utils;\n"]}