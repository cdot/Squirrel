{"version":3,"sources":["js/LocalStorageStore.js"],"names":["LocalStorageStore","params","user","this","key","i","poss_user","localStorage","m","exec","DEBUG","console","debug","AbstractStore","call","prototype","Object","create","options","$","extend","needs_path","identifier","read","path","ok","fail","str","getItem","e","NODATA","data","Utils","PackedStringToArrayBuffer","write","ArrayBufferToPackedString","setItem"],"mappings":";AAUA,QAASA,mBAAkBC,QACvB,YAEA,IAAIA,OAAOC,KACPC,KAAKD,KAAKD,OAAOC,UACd,CAKH,IAHA,GACIE,KADAC,EAAI,EAEJC,UAAY,KACsB,OAA9BF,IAAMG,aAAaH,IAAIC,KAAa,CACxC,GAAIG,GAAI,mBAAmBC,KAAKL,IAChC,IAAII,EAAG,CACH,GAAIF,UAAW,CACXA,UAAY,IACZ,OAEAA,UAAYE,EAAE,GAEtBH,IAEAC,YACII,OAAOC,QAAQC,MAAM,+CAAiDN,WAC1EH,KAAKD,KAAKI,YAIlBO,cAAcC,KAAKX,KAAMF,QAG7BD,kBAAkBe,UAAYC,OAAOC,OAAOJ,cAAcE,WAE1Df,kBAAkBe,UAAUG,QAAU,WAClC,YAEA,OAAOC,GAAEC,OAAOP,cAAcE,UAAUG,WACpCG,YAAY,EACZC,WAAY,aAIpBtB,kBAAkBe,UAAUQ,KAAO,SAASC,KAAMC,GAAIC,MAClD,YAEA,IAAIC,IAEAjB,QAAOC,QAAQC,MAAM,8BAAgCY,KACzD,KACIG,IAAMpB,aAAaqB,QAAQJ,MAC7B,MAAOK,GAGL,MAFInB,QAAOC,QAAQC,MAAM,UAAYiB,OACrCH,MAAKZ,KAAKX,KAAM0B,GAGpB,GAAY,OAARF,IACAD,KAAKZ,KAAKX,KAAMU,cAAciB,YAC3B,CACH,GAAIC,MAAOC,MAAMC,0BAA0BN,IAC3CF,IAAGX,KAAKX,KAAM4B,QAKtB/B,kBAAkBe,UAAUmB,MAAQ,SAASV,KAAMO,KAAMN,GAAIC,MACzD,YAEIhB,QAAOC,QAAQC,MAAM,8BAAgCY,KACzD,KACI,GAAIG,KAAMK,MAAMG,0BAA0BJ,KAC1CxB,cAAa6B,QAAQZ,KAAMG,KAC7B,MAAOE,GAGL,MAFInB,QAAOC,QAAQC,MAAM,UAAYiB,OACrCH,MAAKZ,KAAKX,KAAM0B,GAGpBJ,GAAGX,KAAKX","file":"js/LocalStorageStore.min.js","sourcesContent":["/*@preserve Copyright (C) 2015 Crawford Currie http://c-dot.co.uk license MIT*/\n\n/* global DEBUG:true */\n/* global AbstractStore */\n/* global Utils */\n\n/**\n * A store engine using HTML5 localStorage.\n * @implements AbstractStore\n */\nfunction LocalStorageStore(params) {\n    \"use strict\";\n\n    if (params.user) {\n        this.user(params.user);\n    } else {\n        // See if we can spot a possible user. Specific to Squirrel.\n        var i = 0;\n        var key;\n        var poss_user = null;\n        while ((key = localStorage.key(i)) != null) {\n            var m = /^Squirrel\\.(.*)$/.exec(key);\n            if (m) {\n                if (poss_user) {\n                    poss_user = null;\n                    break;\n                } else\n                    poss_user = m[1];\n            }\n            i++;\n        }\n        if (poss_user) {\n            if (DEBUG) console.debug(\"LocalStorageStore: Identified possible user \" + poss_user);\n            this.user(poss_user);\n        }\n    }\n\n    AbstractStore.call(this, params);\n}\n\nLocalStorageStore.prototype = Object.create(AbstractStore.prototype);\n\nLocalStorageStore.prototype.options = function() {\n    \"use strict\";\n\n    return $.extend(AbstractStore.prototype.options(), {\n        needs_path: true,\n        identifier: \"browser\"\n    });\n};\n\nLocalStorageStore.prototype.read = function(path, ok, fail) {\n    \"use strict\";\n\n    var str;\n\n    if (DEBUG) console.debug(\"LocalStorageStore: Reading \" + path);\n    try {\n        str = localStorage.getItem(path);\n    } catch (e) {\n        if (DEBUG) console.debug(\"Caught \" + e);\n        fail.call(this, e);\n        return;\n    }\n    if (str === null) {\n        fail.call(this, AbstractStore.NODATA);\n    } else {\n        var data = Utils.PackedStringToArrayBuffer(str);\n        ok.call(this, data);\n    }\n};\n\n// data is a String or a Blob\nLocalStorageStore.prototype.write = function(path, data, ok, fail) {\n    \"use strict\";\n\n    if (DEBUG) console.debug(\"LocalStorageStore: Writing \" + path);\n    try {\n        var str = Utils.ArrayBufferToPackedString(data);\n        localStorage.setItem(path, str);\n    } catch (e) {\n        if (DEBUG) console.debug(\"Caught \" + e);\n        fail.call(this, e);\n        return;\n    }\n    ok.call(this);\n};\n"]}