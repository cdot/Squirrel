{"version":3,"sources":["js/TestStore.js"],"names":["TestStore","params","user","LocalStorageStore","call","this","SQUIRREL_STORE","prototype","Object","create","options","$","extend","identifier","needs_path","needs_image","read","path","ok","fail","pass","write","data"],"mappings":";AASA,QAASA,WAAUC,QACf,YACAA,QAAOC,KAAO,OAMdC,kBAAkBC,KAAKC,KAAMJ,QAGjCK,eAAiBN,UAEjBA,UAAUO,UAAYC,OAAOC,OAAON,kBAAkBI,WAEtDP,UAAUO,UAAUG,QAAU,WAC1B,YAEA,OAAOC,GAAEC,OAAOT,kBAAkBI,UAAUG,WACxCG,WAAY,aACZC,YAAY,EACZC,aAAa,KAIrBf,UAAUO,UAAUS,KAAO,SAASC,KAAMC,GAAIC,MAC1C,YACoB,OAAhBd,KAAKe,OACLD,KAAKf,KAAKC,KAAM,uCAEhBF,kBAAkBI,UAAUS,KAAKZ,KAAKC,KAAM,OAASY,KAAMC,GAAIC,OAIvEnB,UAAUO,UAAUc,MAAQ,SAASJ,KAAMK,KAAMJ,GAAIC,MACjD,YAEoB,OAAhBd,KAAKe,OACLD,KAAKf,KAAKC,KAAM,wCAEhBF,kBAAkBI,UAAUc,MAAMjB,KAAKC,KAAM,OAASY,KAAMK,KAAMJ,GAAIC","file":"js/TestStore.min.js","sourcesContent":["/*@preserve Copyright (C) 2015 Crawford Currie http://c-dot.co.uk license MIT*/\n\n/* global LocalStorageStore */\n/* global SQUIRREL_STORE:true */\n\n/**\n * A test store engine\n * @extends LocalStorageStore\n */\nfunction TestStore(params) {\n    \"use strict\";\n    params.user = \"TEST\";\n/*\n    params.ok = function() {\n        params.fail.call(this, \"Fuck off\");\n    };\n*/\n    LocalStorageStore.call(this, params);\n}\n\nSQUIRREL_STORE = TestStore;\n\nTestStore.prototype = Object.create(LocalStorageStore.prototype);\n\nTestStore.prototype.options = function() {\n    \"use strict\";\n\n    return $.extend(LocalStorageStore.prototype.options(), {\n        identifier: \"Local Test\",\n        needs_path: true, // vary this\n        needs_image: true // vary this\n    });\n};\n\nTestStore.prototype.read = function(path, ok, fail) {\n    \"use strict\";\n    if (this.pass() !== \"x\") {\n        fail.call(this, \"TestStore.read expects password 'x'\");\n    } else {\n        LocalStorageStore.prototype.read.call(this, \"TEST\" + path, ok, fail);\n    }\n};\n\nTestStore.prototype.write = function(path, data, ok, fail) {\n    \"use strict\";\n\n    if (this.pass() !== \"x\") {\n        fail.call(this, \"TestStore.write expects password 'x'\");\n    } else {\n        LocalStorageStore.prototype.write.call(this, \"TEST\" + path, data, ok, fail);\n    }\n};\n"]}