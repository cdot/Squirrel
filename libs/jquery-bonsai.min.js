!function($){$.fn.bonsai=function(options){var args=arguments;return this.each(function(){var bonsai=$(this).data("bonsai");if(bonsai||(bonsai=new Bonsai(this,options),$(this).data("bonsai",bonsai)),"string"==typeof options){var method=options;return bonsai[method].apply(bonsai,[].slice.call(args,1))}})},$.bonsai={},$.bonsai.defaults={expandAll:!1,expand:null,collapse:null,addExpandAll:!1,addSelectAll:!1,selectAllExclude:null,checkboxes:!1,createCheckboxes:!1,handleDuplicateCheckboxes:!1};var Bonsai=function(el,options){var self=this;options=options||{},this.options=$.extend({},$.bonsai.defaults,options),this.el=$(el).addClass("bonsai").data("bonsai",this),this.guid=Math.round(1e8*Math.random()),this.generatedIdPrefix="bonsai-generated-"+this.guid+"-",this.specifiedIdPrefix="bonsai-specified-"+this.guid+"-",this.update(),this.isRootNode()&&(this.options.handleDuplicateCheckboxes&&this.handleDuplicates(),this.options.checkboxes&&this.el.qubit(this.options),this.options.addExpandAll&&this.addExpandAllLink(),this.options.addSelectAll&&this.addSelectAllLink(),this.el.on("click",".thumb",function(ev){self.toggle($(ev.currentTarget).closest("li"))})),this.options.expandAll&&this.expandAll()};Bonsai.prototype={isRootNode:function(){return this.options.scope==this.el},toggle:function(listItem){$(listItem).hasClass("expanded")?this.collapse(listItem):this.expand(listItem)},expand:function(listItem){this.setExpanded(listItem,!0)},collapse:function(listItem){this.setExpanded(listItem,!1)},setExpanded:function(listItem,expanded){if(listItem=$(listItem),listItem.length>1){var self=this;return void listItem.each(function(){self.setExpanded(this,expanded)})}if(expanded){if(!listItem.data("subList"))return;listItem=$(listItem).addClass("expanded").removeClass("collapsed"),$(listItem.data("subList")).css("height","auto")}else listItem=$(listItem).addClass("collapsed").removeClass("expanded"),$(listItem.data("subList")).height(0)},expandAll:function(){this.expand(this.el.find("li"))},collapseAll:function(){this.collapse(this.el.find("li"))},update:function(){var self=this;this.options.scope||(this.options.scope=this.el),this.el.children().each(function(){var item=$(this);if(self.options.createCheckboxes&&self.insertCheckbox(item),0==item.children().filter(".thumb").length){var thumb=$('<div class="thumb"></div>');item.prepend(thumb)}var subLists=item.children().filter("ol, ul");item.toggleClass("has-children",subLists.find("li").length>0),subLists.each(function(){if(0!=$("li",this).length){item.data("subList",this),item.hasClass("expanded")?self.expand(item):self.collapse(item);var exists=!!$(this).data("bonsai");$(this).bonsai(exists?"update":self.options)}})}),this.expand=this.options.expand||this.expand,this.collapse=this.options.collapse||this.collapse,this.el.find("li").toArray().forEach(function(li){self.liId($(li))})},serialize:function(){var self=this;return this.el.find("li").toArray().reduce(function(acc,li){var $li=$(li),state=$li.hasClass("expanded")?"expanded":$li.hasClass("collapsed")?"collapsed":null;return acc[self.liId($li)]=state,acc},{})},restore:function(state){var self=this;Object.keys(state).forEach(function(key){var $li=self.el.find("#"+key);"expanded"===state[key]?self.expand($li):"collapsed"===state[key]&&self.collapse($li)})},insertCheckbox:function(listItem){if(!listItem.find("> input[type=checkbox]").length){var id=this.checkboxId(listItem),checkbox=$('<input type="checkbox" name="'+this.getCheckboxName(listItem)+'" id="'+id+'" /> '),children=listItem.children(),text=listItem.contents().filter(function(){return 3==this.nodeType}).first();checkbox.val(listItem.data("value")),checkbox.prop("checked",listItem.data("checked")),children.remove(),listItem.append(checkbox).append($('<label for="'+id+'">').append(text?text:children.first())).append(text?children:children.slice(1))}},handleDuplicates:function(){var self=this;self.el.on("change","input[type=checkbox]",function(ev){var checkbox=$(ev.target);if(checkbox.val()){var selector='input[type=checkbox][value="'+checkbox.val()+'"][name="'+checkbox.attr("name")+'"]'+(checkbox.prop("checked")?":not(:checked)":":checked");self.el.find(selector).prop({checked:checkbox.prop("checked"),indeterminate:checkbox.prop("indeterminate")}).trigger("change")}})},checkboxPrefix:"checkbox-",liId:function(listItem){var id=listItem.attr("id"),dataId=listItem.attr("data-bonsai-id");if(id);else if(dataId)id=this.specifiedIdPrefix+dataId;else do id=this.generatedIdPrefix+Bonsai.uniqueId++;while($("#"+id).length>0);return listItem.attr("id",id),id},checkboxId:function(listItem){return this.checkboxPrefix+this.liId(listItem)},getCheckboxName:function(listItem){return listItem.data("name")||listItem.parents().filter("[data-name]").data("name")},addExpandAllLink:function(){var self=this;$('<div class="expand-all">').append($('<a class="all">Expand all</a>').on("click",function(){self.expandAll()})).append('<i class="separator"></i>').append($('<a class="none">Collapse all</a>').on("click",function(){self.collapseAll()})).insertBefore(this.el)},addSelectAllLink:function(){function getCheckboxes(){return scope.find("li").filter(self.options.selectAllExclude||function(){return"none"!=$(this).css("display")}).find("> input[type=checkbox]")}var scope=this.options.scope,self=this;$('<div class="check-all">').append($('<a class="all">Select all</a>').css("cursor","pointer").on("click",function(){getCheckboxes().prop({checked:!0,indeterminate:!1})})).append('<i class="separator"></i>').append($('<a class="none">Select none</a>').css("cursor","pointer").on("click",function(){getCheckboxes().prop({checked:!1,indeterminate:!1})})).insertAfter(this.el)},setCheckedValues:function(values){var all=this.options.scope.find("input[type=checkbox]");$.each(values,function(key,value){all.filter('[value="'+value+'"]').prop("checked",!0).trigger("change")})}},$.extend(Bonsai,{uniqueId:0})}(jQuery);